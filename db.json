{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/gallery/covers/CP77-COVER.jpg","path":"gallery/covers/CP77-COVER.jpg","modified":1,"renderable":0},{"_id":"source/gallery/covers/CyberPunk-icon.png","path":"gallery/covers/CyberPunk-icon.png","modified":1,"renderable":0},{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/cyberpunk-logo.svg","path":"img/cyberpunk-logo.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/column.js","path":"js/column.js","modified":1,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_discarded/K8s_cmd.md","hash":"c99c596ff282fe3d53798fbdeeb69d8137d8b3f3","modified":1676006676168},{"_id":"source/_drafts/Hexo-cli-quick-start.md","hash":"f1483e3248d84c26cb090e8ba05b030bea72f22d","modified":1676012950068},{"_id":"source/_drafts/K8s常见命令2.md","hash":"0e90fe5315fe93affa6b6bc7eacfa026014cdcb1","modified":1676050504620},{"_id":"source/_drafts/K8s常见命令3.md","hash":"f5842320f74e1a043594c389c43539f6582e8c3f","modified":1676050500516},{"_id":"source/_posts/Charles安装、抓包HTTPS、IOS证书安装.md","hash":"ba835c4a383ba0e952f33f33b5d8a242cf012003","modified":1676050411716},{"_id":"source/_posts/K8s常见命令.md","hash":"cbb4e0e7d7cb8d817e7e7e3b9f619508b80dc4ce","modified":1676050478260},{"_id":"source/_posts/Kong-Konga-Docker容器化安装.md","hash":"7fe13e24f6903ebc783525d7a20cdc6aaea9eadf","modified":1676050459929},{"_id":"source/_posts/Linux-磁盘挂载-（阿里云数据磁盘）.md","hash":"81ec6a95189cb891949c9212eb493bb7adbd12a2","modified":1676050443965},{"_id":"source/about/index.md","hash":"e6135a41f81906c5e360adee27e01e865141b124","modified":1676000531699},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151338},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151325},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151334},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151360},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151448},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151573},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151571},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151573},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151580},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1675618151614},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1675618151723},{"_id":"themes/icarus/.eslintrc.json","hash":"ca45d8e5d80ad6b7004cddacae7fc7d8040b2d6f","modified":1675618151725},{"_id":"themes/icarus/.gitignore","hash":"36084c0851a22bfd393933abb8e262562ffc6802","modified":1675618151681},{"_id":"themes/icarus/.npmignore","hash":"42242c8da7a020a3295e7dd3d18bf022cb08b661","modified":1675618151300},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1675618151683},{"_id":"themes/icarus/LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1675618151332},{"_id":"themes/icarus/README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1675618151681},{"_id":"themes/icarus/package.json","hash":"9d42eb99acdaf56afbda664adea40d8d80cdb0b0","modified":1675618151685},{"_id":"themes/icarus/.github/dependabot.yml","hash":"d532d0db30e42211f35823b9885f3ed1b2d51777","modified":1675618151720},{"_id":"themes/icarus/.github/stale.yml","hash":"88c73f6216c5666d2f60b1e8fe690a3f6e561e42","modified":1675618151687},{"_id":"themes/icarus/include/config.js","hash":"1ff0f174e9670074ad2bee890d5b6da486800c9a","modified":1675618151572},{"_id":"themes/icarus/include/dependency.js","hash":"0ca35dec92ccf383f45db905db1a5a0e92d7209e","modified":1675618151608},{"_id":"themes/icarus/include/register.js","hash":"ec6596b63bfb4349ba61792d905abe8e06fea625","modified":1675618151464},{"_id":"themes/icarus/languages/de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1675618151660},{"_id":"themes/icarus/languages/en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1675618151670},{"_id":"themes/icarus/languages/es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1675618151644},{"_id":"themes/icarus/languages/fr.yml","hash":"06d5c819d6108a42b28cff7b52e5410d0bed55d1","modified":1675618151679},{"_id":"themes/icarus/languages/id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1675618151661},{"_id":"themes/icarus/languages/ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1675618151664},{"_id":"themes/icarus/languages/ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1675618151644},{"_id":"themes/icarus/languages/pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1675618151661},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1675618151641},{"_id":"themes/icarus/languages/ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1675618151670},{"_id":"themes/icarus/languages/tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1675618151644},{"_id":"themes/icarus/languages/tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1675618151671},{"_id":"themes/icarus/languages/vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1675618151677},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1675618151672},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1675618151673},{"_id":"themes/icarus/layout/archive.jsx","hash":"99bf235042d0c57af15d2f108ba5eda77443fea8","modified":1675618151459},{"_id":"themes/icarus/layout/categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1675618151310},{"_id":"themes/icarus/layout/category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1675618151441},{"_id":"themes/icarus/layout/index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1675618151467},{"_id":"themes/icarus/layout/layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1675618151310},{"_id":"themes/icarus/layout/page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1675618151362},{"_id":"themes/icarus/layout/post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1675618151436},{"_id":"themes/icarus/layout/tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1675618151486},{"_id":"themes/icarus/layout/tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1675618151310},{"_id":"themes/icarus/scripts/index.js","hash":"0c666db6fcb4ffc4d300f4e108c00ee42b1cbbe6","modified":1675618151681},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"d801be6937df21e63113be8840b2e23c465db87b","modified":1675618151723},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"5d3abdc1a2a79ef9822865184eced6e31066d8f6","modified":1675618151718},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"b49270a202d839c298e584b5d017f56140c7e7a0","modified":1675618151700},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"05313e241a3d43fdadb0f74390b562c07c25d4d0","modified":1675618151700},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"c6f60f37e6cd0bc21a81b3b07f84e04e9e80fb57","modified":1675618151702},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"e106fa240c24c8bfbdd623549651600c6d786c9c","modified":1675618151720},{"_id":"themes/icarus/.github/workflows/github-release.yml","hash":"ed6640d4b4fa00a46c1a9c4f0608b01ca80df957","modified":1675618151699},{"_id":"themes/icarus/.github/workflows/lint.yml","hash":"17d374bf92867a67b15d657c2d41f8e4f9271102","modified":1675618151700},{"_id":"themes/icarus/.github/workflows/npm-publish.yml","hash":"03942b094362e71def2ff78ff0489d38482144d4","modified":1675618151692},{"_id":"themes/icarus/.github/workflows/test.yml","hash":"a92a6c557fc18f8c161f7e656ec330bffdb0f3ee","modified":1675618151690},{"_id":"themes/icarus/include/migration/head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1675618151605},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"3ccb2d2ce11018bebd7172da66faecc3983bff00","modified":1675618151615},{"_id":"themes/icarus/include/migration/v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1675618151614},{"_id":"themes/icarus/include/migration/v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1675618151614},{"_id":"themes/icarus/include/migration/v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1675618151608},{"_id":"themes/icarus/include/schema/config.json","hash":"f233678cd656c0e300181ca79dd30cb42fc213b3","modified":1675618151579},{"_id":"themes/icarus/include/style/article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1675618151501},{"_id":"themes/icarus/include/style/base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1675618151514},{"_id":"themes/icarus/include/style/button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1675618151537},{"_id":"themes/icarus/include/style/card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1675618151503},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1675618151467},{"_id":"themes/icarus/include/style/donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1675618151565},{"_id":"themes/icarus/include/style/footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1675618151565},{"_id":"themes/icarus/include/style/helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1675618151538},{"_id":"themes/icarus/include/style/navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1675618151537},{"_id":"themes/icarus/include/style/pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1675618151540},{"_id":"themes/icarus/include/style/plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1675618151566},{"_id":"themes/icarus/include/style/responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1675618151566},{"_id":"themes/icarus/include/style/search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1675618151547},{"_id":"themes/icarus/include/style/timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1675618151505},{"_id":"themes/icarus/include/style/widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1675618151560},{"_id":"themes/icarus/include/util/console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1675618151472},{"_id":"themes/icarus/layout/common/article.jsx","hash":"efe38d9c10d6421f142407651b6230e257a57451","modified":1675618151427},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"427089c33002707b76e2f38709459a6824fd0f9b","modified":1675618151412},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"889fb0a7ccc502f0a43b4a18eb330e351e50493c","modified":1675618151412},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"de966666f1e4ef80e0d15081b2709c3065b246dd","modified":1676049329274},{"_id":"themes/icarus/layout/common/head.jsx","hash":"2ec1f511f32e3a9c86d49f1338f57ae5ece18898","modified":1675618151412},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1675618151429},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"f6826c1a5f5f59f4a0aa00c63bdb0ad4ff4eab69","modified":1675618151484},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"4816c9099a881b5f7b13af3e42caae36edbffccd","modified":1675618151436},{"_id":"themes/icarus/layout/common/search.jsx","hash":"6f244a37293031670a2964fe424ecd062e591d7b","modified":1675618151418},{"_id":"themes/icarus/layout/common/share.jsx","hash":"c9fb0319ad5e5a10ad3636b26a6c2afed14c590f","modified":1675618151361},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"251263b97de12f2b8d1fce2514e83430f2515b94","modified":1675618151437},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1675618151347},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1675618151347},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1675618151307},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1675618151622},{"_id":"themes/icarus/source/css/default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1675618151614},{"_id":"themes/icarus/source/css/style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1675618151624},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1675618151644},{"_id":"themes/icarus/source/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1675618151658},{"_id":"themes/icarus/source/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1675618151659},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1675618151637},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1675618151632},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1675618151637},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"6bf0641cb69dffac97f69baea192d7fa3ab612cb","modified":1675618151628},{"_id":"themes/icarus/source/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1675618151633},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1675618151622},{"_id":"themes/icarus/source/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1675618151622},{"_id":"themes/icarus/source/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1675618151624},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1675618151600},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"f49270b619f5d2c3decde6b0b5a0c3bbab4b54a5","modified":1675618151597},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1675618151594},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1675618151594},{"_id":"themes/icarus/include/schema/common/head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1675618151588},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1675618151602},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1675618151598},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1675618151594},{"_id":"themes/icarus/include/schema/common/search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1675618151580},{"_id":"themes/icarus/include/schema/common/share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1675618151590},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1675618151604},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1675618151602},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1675618151581},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1675618151577},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1675618151574},{"_id":"source/gallery/covers/CP77-COVER.jpg","hash":"44336483e32c89b695fd439229cfe44fe94604ec","modified":1676047543131},{"_id":"source/gallery/covers/CyberPunk-icon.png","hash":"4a9f2bbfcb0065b377501e5d43e3aef9519cb5aa","modified":1676164395894},{"_id":"themes/icarus/source/img/cyberpunk-logo.svg","hash":"28bbfc1546e0df441ef92c48cb49d7fd6c45c6c0","modified":1676164422742},{"_id":"public/js/algolia.js","hash":"a8df0c0abeeb4ee1d2d720161f3aea7339380704","modified":1676165107337},{"_id":"public/js/google_cse.js","hash":"1a9881669dfdeb2b3214074eee0d3e01e52db2c4","modified":1676165107337},{"_id":"public/js/insight.js","hash":"86bbdb7305d9bf19ad62d2ca2cf169fc8d9f9d31","modified":1676165107337},{"_id":"public/js/toc.js","hash":"da6fb757a1b083b8ed138bf29aad3a7bf8ec4f11","modified":1676165107337},{"_id":"public/content.json","hash":"689f06176564c92720acca2b0dd4021e4d2ce823","modified":1676165107337},{"_id":"public/manifest.json","hash":"bd59ae3334b0299bc338248b47ad6def8cc27556","modified":1676165107337},{"_id":"public/about/index.html","hash":"ade7b74b6b325fc0a6fda93036ce54b323d46c96","modified":1676165107337},{"_id":"public/2023/02/10/K8s常见命令/index.html","hash":"2342b8acd1cf37db7c011949301804653c7a98f0","modified":1676165107337},{"_id":"public/2023/02/06/Charles安装、抓包HTTPS、IOS证书安装/index.html","hash":"12a612c062316ff3f9f203a4741594510d64af1f","modified":1676165107337},{"_id":"public/2023/02/06/Kong-Konga-Docker容器化安装/index.html","hash":"940d983b119de996101e50d96333c4cbf27a6469","modified":1676165107337},{"_id":"public/2023/02/06/Linux-磁盘挂载-（阿里云数据磁盘）/index.html","hash":"9f1cc9b0db02c146284dd08741933c7ec849c5ed","modified":1676165107337},{"_id":"public/archives/index.html","hash":"992b089b5fd23a53fafdfce4d173edc838ce23c5","modified":1676165107337},{"_id":"public/archives/2023/index.html","hash":"8f8be3a608f023488f6899975c8ecb4f93c74052","modified":1676165107337},{"_id":"public/archives/2023/02/index.html","hash":"42a2ed1839da44f6bfba91bb8b2e61e8f44ce767","modified":1676165107337},{"_id":"public/categories/charles/index.html","hash":"414fefc348233f0e679c7ffd1d05ff0fa1381554","modified":1676165107337},{"_id":"public/categories/Kubernetes/index.html","hash":"b9bd66d992c4907b8a3e40f4beda2f65361aab4f","modified":1676165107337},{"_id":"public/categories/Docker/index.html","hash":"b1abf4117374ae4509dc1d50bd1dfed4bfd1a394","modified":1676165107337},{"_id":"public/categories/WebDav/index.html","hash":"ae91ab964bcb0085784f1c8cce7ef317b72d9197","modified":1676165107337},{"_id":"public/index.html","hash":"acc5fee4f2fe5a0ba4f1e9955f5ffecfb043937d","modified":1676165107337},{"_id":"public/tags/https-proxy/index.html","hash":"b965448f70745192508a7aae4ddbc135b3f92c07","modified":1676165107337},{"_id":"public/tags/Kubernetes/index.html","hash":"edf8cafa5954fcf75e3f601ec7818ac3bbfd154b","modified":1676165107337},{"_id":"public/tags/Docker/index.html","hash":"f588dc07aef9f4cd1eee11d81755b8a71bdbf279","modified":1676165107337},{"_id":"public/tags/WebDav/index.html","hash":"c1d52be058e490b39c0a2f7fd249a1127282090e","modified":1676165107337},{"_id":"public/categories/index.html","hash":"db79e8a34b89a92db0bd020adeecca9d780c9c6a","modified":1676165107337},{"_id":"public/tags/index.html","hash":"b35d9844dd2fee5b41b9e69eed46d707580c61da","modified":1676165107337},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1676165107337},{"_id":"public/img/favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1676165107337},{"_id":"public/img/logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1676165107337},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1676165107337},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1676165107337},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1676165107337},{"_id":"public/live2dw/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1676165107337},{"_id":"public/live2dw/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1676165107337},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1676165107337},{"_id":"public/js/animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1676165107337},{"_id":"public/js/back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1676165107337},{"_id":"public/js/column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1676165107337},{"_id":"public/js/main.js","hash":"08a2641765eeaf712157ad134dd675e3f7708ae2","modified":1676165107337},{"_id":"public/css/cyberpunk.css","hash":"b462177bee11f76e84e649f8192d5a68cb4b1402","modified":1676165107337},{"_id":"public/css/default.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1676165107337},{"_id":"public/css/style.css","hash":"8717dd0ed1fe2a4237fbfb4f4f6e566cb1ee16b7","modified":1676165107337},{"_id":"public/live2dw/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1676165107337},{"_id":"public/live2dw/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1676165107337},{"_id":"public/gallery/covers/CP77-COVER.jpg","hash":"44336483e32c89b695fd439229cfe44fe94604ec","modified":1676165107337},{"_id":"public/gallery/covers/CyberPunk-icon.png","hash":"4a9f2bbfcb0065b377501e5d43e3aef9519cb5aa","modified":1676165107337},{"_id":"public/img/cyberpunk-logo.svg","hash":"28bbfc1546e0df441ef92c48cb49d7fd6c45c6c0","modified":1676165107337}],"Category":[{"name":"charles","_id":"cle0pfiiy00060y15fn0y4u6s"},{"name":"Kubernetes","_id":"cle0pfijg000a0y15da52an0o"},{"name":"Docker","_id":"cle0pfijn000e0y159mws8ama"},{"name":"WebDav","_id":"cle0pfijz000i0y154m1791eq"}],"Data":[],"Page":[{"title":"about","date":"2023-02-10T03:24:40.000Z","_content":"# Java Development Engineer\nTechnology Stack:\n\n- Language : JavaSE，JavaEE，Golang，Pythone\n- IDE : Eclipse，IntelliJ IDEA，Goland，Pycharm\n- Version Controller : Maven，Gradle，SVN，Git，GoMod\n- Linux，Nginx，Tomcat，Jenkins，\n- SQL Databases  : MySQL，\n- NoSQL Databases  : Redis，MongoDB，\n- Dubbo，ZooKeeper，SpringCloud，Grpc，Gorm\n- Framework : Spring ，SpringMVC ，SpringBoot，MyBatis，BeetSql\n- Html Template : Jsp，FreeMarker，Thymeleaf，Beetl\n- JavaScript，JQuery，AJAX，JSON，RestfulApi\n- Shiro，EasyUI，LayUI，NodeJS ，Vue，Bootstrap。\n\n\n- 扎实的 Java 语言基础，深入了解常用数据结构、设计模式、多线程、IO、JVM 内存模型，并发编程技术。\n- 熟练掌握 Spring、SpringMVC、MyBatis、SpringData JPA，SpringBoot 开源框架并阅读过核心源码。\n- 熟练运用 Dubbo RPC 通信框架，SPI 扩展实现，Zookeeper注册中心的分布式服务注册和发现、Disconf 配置中心。\n- 熟练运用 SpringCloud 微服务体系，Consul/Eureka 注册中心，Feign 远程调用、Gateway 网关、Sentinel 服务熔断降级。\n- 熟练运用 MySql 数据库进行数据处理和分库分表，了解 innodb 引擎、MVCC 机制及提供可靠慢 Sql 优化方案。\n- 熟练运用 Redis 缓存中间件及其持久化方案、删除策略、Redis 集群模式、预热、雪崩、击穿、穿透等策略。\n- 熟练运用 RocketMQ、Kafka 等消息中间件，进行系统解耦，削峰填谷，异步通讯，实时海量数据等处理。\n- 熟练运用高级数据结构与设计模式，对时间空间复杂度进行优化，扎实的算法功底，了解 JVM 内存和 GC 回收策略及调优。 \n- 熟练运用 Jenkins、Docker、K8s 进行容器编排和自动化构建部署，运用 Linux、Arthas 基本命令排查线上问题能力。\n- 熟悉分布式系统的限流、容错、降级等高可用、高并发的治理方案和数据一致性协议，分布式锁及分布式事务控制。\n- 熟悉 Zookeeper 服务配置，集群选举机制和分布式锁的实现。运用分布式调度框架 Elastic-Job，集群模式问题处理。\n- 熟悉 Tomcat 工作原理，对其进行深入分析和性能优化，理解 Nginx 线程模型和性能优化，动静分离，负载均衡等配置。\n- 了解 HTTPS 安全通信协议，了解前端相关知识 JS、JQ、AJAX、RESTful、Node.Js、Vue。","source":"about/index.md","raw":"title: about\ndate: 2023-02-10 11:24:40\n---\n# Java Development Engineer\nTechnology Stack:\n\n- Language : JavaSE，JavaEE，Golang，Pythone\n- IDE : Eclipse，IntelliJ IDEA，Goland，Pycharm\n- Version Controller : Maven，Gradle，SVN，Git，GoMod\n- Linux，Nginx，Tomcat，Jenkins，\n- SQL Databases  : MySQL，\n- NoSQL Databases  : Redis，MongoDB，\n- Dubbo，ZooKeeper，SpringCloud，Grpc，Gorm\n- Framework : Spring ，SpringMVC ，SpringBoot，MyBatis，BeetSql\n- Html Template : Jsp，FreeMarker，Thymeleaf，Beetl\n- JavaScript，JQuery，AJAX，JSON，RestfulApi\n- Shiro，EasyUI，LayUI，NodeJS ，Vue，Bootstrap。\n\n\n- 扎实的 Java 语言基础，深入了解常用数据结构、设计模式、多线程、IO、JVM 内存模型，并发编程技术。\n- 熟练掌握 Spring、SpringMVC、MyBatis、SpringData JPA，SpringBoot 开源框架并阅读过核心源码。\n- 熟练运用 Dubbo RPC 通信框架，SPI 扩展实现，Zookeeper注册中心的分布式服务注册和发现、Disconf 配置中心。\n- 熟练运用 SpringCloud 微服务体系，Consul/Eureka 注册中心，Feign 远程调用、Gateway 网关、Sentinel 服务熔断降级。\n- 熟练运用 MySql 数据库进行数据处理和分库分表，了解 innodb 引擎、MVCC 机制及提供可靠慢 Sql 优化方案。\n- 熟练运用 Redis 缓存中间件及其持久化方案、删除策略、Redis 集群模式、预热、雪崩、击穿、穿透等策略。\n- 熟练运用 RocketMQ、Kafka 等消息中间件，进行系统解耦，削峰填谷，异步通讯，实时海量数据等处理。\n- 熟练运用高级数据结构与设计模式，对时间空间复杂度进行优化，扎实的算法功底，了解 JVM 内存和 GC 回收策略及调优。 \n- 熟练运用 Jenkins、Docker、K8s 进行容器编排和自动化构建部署，运用 Linux、Arthas 基本命令排查线上问题能力。\n- 熟悉分布式系统的限流、容错、降级等高可用、高并发的治理方案和数据一致性协议，分布式锁及分布式事务控制。\n- 熟悉 Zookeeper 服务配置，集群选举机制和分布式锁的实现。运用分布式调度框架 Elastic-Job，集群模式问题处理。\n- 熟悉 Tomcat 工作原理，对其进行深入分析和性能优化，理解 Nginx 线程模型和性能优化，动静分离，负载均衡等配置。\n- 了解 HTTPS 安全通信协议，了解前端相关知识 JS、JQ、AJAX、RESTful、Node.Js、Vue。","updated":"2023-02-10T03:42:11.699Z","path":"about/index.html","comments":1,"layout":"page","_id":"cle0pfihs00000y158956csu9","content":"<h1 id=\"Java-Development-Engineer\"><a href=\"#Java-Development-Engineer\" class=\"headerlink\" title=\"Java Development Engineer\"></a>Java Development Engineer</h1><p>Technology Stack:</p>\n<ul>\n<li>Language : JavaSE，JavaEE，Golang，Pythone</li>\n<li>IDE : Eclipse，IntelliJ IDEA，Goland，Pycharm</li>\n<li>Version Controller : Maven，Gradle，SVN，Git，GoMod</li>\n<li>Linux，Nginx，Tomcat，Jenkins，</li>\n<li>SQL Databases  : MySQL，</li>\n<li>NoSQL Databases  : Redis，MongoDB，</li>\n<li>Dubbo，ZooKeeper，SpringCloud，Grpc，Gorm</li>\n<li>Framework : Spring ，SpringMVC ，SpringBoot，MyBatis，BeetSql</li>\n<li>Html Template : Jsp，FreeMarker，Thymeleaf，Beetl</li>\n<li>JavaScript，JQuery，AJAX，JSON，RestfulApi</li>\n<li>Shiro，EasyUI，LayUI，NodeJS ，Vue，Bootstrap。</li>\n</ul>\n<ul>\n<li>扎实的 Java 语言基础，深入了解常用数据结构、设计模式、多线程、IO、JVM 内存模型，并发编程技术。</li>\n<li>熟练掌握 Spring、SpringMVC、MyBatis、SpringData JPA，SpringBoot 开源框架并阅读过核心源码。</li>\n<li>熟练运用 Dubbo RPC 通信框架，SPI 扩展实现，Zookeeper注册中心的分布式服务注册和发现、Disconf 配置中心。</li>\n<li>熟练运用 SpringCloud 微服务体系，Consul/Eureka 注册中心，Feign 远程调用、Gateway 网关、Sentinel 服务熔断降级。</li>\n<li>熟练运用 MySql 数据库进行数据处理和分库分表，了解 innodb 引擎、MVCC 机制及提供可靠慢 Sql 优化方案。</li>\n<li>熟练运用 Redis 缓存中间件及其持久化方案、删除策略、Redis 集群模式、预热、雪崩、击穿、穿透等策略。</li>\n<li>熟练运用 RocketMQ、Kafka 等消息中间件，进行系统解耦，削峰填谷，异步通讯，实时海量数据等处理。</li>\n<li>熟练运用高级数据结构与设计模式，对时间空间复杂度进行优化，扎实的算法功底，了解 JVM 内存和 GC 回收策略及调优。 </li>\n<li>熟练运用 Jenkins、Docker、K8s 进行容器编排和自动化构建部署，运用 Linux、Arthas 基本命令排查线上问题能力。</li>\n<li>熟悉分布式系统的限流、容错、降级等高可用、高并发的治理方案和数据一致性协议，分布式锁及分布式事务控制。</li>\n<li>熟悉 Zookeeper 服务配置，集群选举机制和分布式锁的实现。运用分布式调度框架 Elastic-Job，集群模式问题处理。</li>\n<li>熟悉 Tomcat 工作原理，对其进行深入分析和性能优化，理解 Nginx 线程模型和性能优化，动静分离，负载均衡等配置。</li>\n<li>了解 HTTPS 安全通信协议，了解前端相关知识 JS、JQ、AJAX、RESTful、Node.Js、Vue。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java-Development-Engineer\"><a href=\"#Java-Development-Engineer\" class=\"headerlink\" title=\"Java Development Engineer\"></a>Java Development Engineer</h1><p>Technology Stack:</p>\n<ul>\n<li>Language : JavaSE，JavaEE，Golang，Pythone</li>\n<li>IDE : Eclipse，IntelliJ IDEA，Goland，Pycharm</li>\n<li>Version Controller : Maven，Gradle，SVN，Git，GoMod</li>\n<li>Linux，Nginx，Tomcat，Jenkins，</li>\n<li>SQL Databases  : MySQL，</li>\n<li>NoSQL Databases  : Redis，MongoDB，</li>\n<li>Dubbo，ZooKeeper，SpringCloud，Grpc，Gorm</li>\n<li>Framework : Spring ，SpringMVC ，SpringBoot，MyBatis，BeetSql</li>\n<li>Html Template : Jsp，FreeMarker，Thymeleaf，Beetl</li>\n<li>JavaScript，JQuery，AJAX，JSON，RestfulApi</li>\n<li>Shiro，EasyUI，LayUI，NodeJS ，Vue，Bootstrap。</li>\n</ul>\n<ul>\n<li>扎实的 Java 语言基础，深入了解常用数据结构、设计模式、多线程、IO、JVM 内存模型，并发编程技术。</li>\n<li>熟练掌握 Spring、SpringMVC、MyBatis、SpringData JPA，SpringBoot 开源框架并阅读过核心源码。</li>\n<li>熟练运用 Dubbo RPC 通信框架，SPI 扩展实现，Zookeeper注册中心的分布式服务注册和发现、Disconf 配置中心。</li>\n<li>熟练运用 SpringCloud 微服务体系，Consul/Eureka 注册中心，Feign 远程调用、Gateway 网关、Sentinel 服务熔断降级。</li>\n<li>熟练运用 MySql 数据库进行数据处理和分库分表，了解 innodb 引擎、MVCC 机制及提供可靠慢 Sql 优化方案。</li>\n<li>熟练运用 Redis 缓存中间件及其持久化方案、删除策略、Redis 集群模式、预热、雪崩、击穿、穿透等策略。</li>\n<li>熟练运用 RocketMQ、Kafka 等消息中间件，进行系统解耦，削峰填谷，异步通讯，实时海量数据等处理。</li>\n<li>熟练运用高级数据结构与设计模式，对时间空间复杂度进行优化，扎实的算法功底，了解 JVM 内存和 GC 回收策略及调优。 </li>\n<li>熟练运用 Jenkins、Docker、K8s 进行容器编排和自动化构建部署，运用 Linux、Arthas 基本命令排查线上问题能力。</li>\n<li>熟悉分布式系统的限流、容错、降级等高可用、高并发的治理方案和数据一致性协议，分布式锁及分布式事务控制。</li>\n<li>熟悉 Zookeeper 服务配置，集群选举机制和分布式锁的实现。运用分布式调度框架 Elastic-Job，集群模式问题处理。</li>\n<li>熟悉 Tomcat 工作原理，对其进行深入分析和性能优化，理解 Nginx 线程模型和性能优化，动静分离，负载均衡等配置。</li>\n<li>了解 HTTPS 安全通信协议，了解前端相关知识 JS、JQ、AJAX、RESTful、Node.Js、Vue。</li>\n</ul>\n"}],"Post":[{"title":"Hexo-cli快速入门","date":"2023-02-05T17:35:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_drafts/Hexo-cli-quick-start.md","raw":"title: Hexo-cli快速入门\ntags: []\ncategories: []\ndate: 2023-02-06 01:35:00\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"Hexo-cli-quick-start","published":0,"updated":"2023-02-10T07:09:10.068Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfii100010y155xcb6nab","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"K8s常见命令2","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-10T17:25:23.000Z","_content":"#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","source":"_drafts/K8s常见命令2.md","raw":"title: K8s常见命令2\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ndate: 2023-02-11 01:25:23\ntags:\n---\n#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","slug":"K8s常见命令2","published":0,"updated":"2023-02-10T17:35:04.620Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfiid00020y15fxqhh8ot","content":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2><span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>"},{"title":"K8s常见命令3","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-10T17:25:57.000Z","_content":"#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","source":"_drafts/K8s常见命令3.md","raw":"title: K8s常见命令3\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ndate: 2023-02-11 01:25:57\ntags:\n---\n#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","slug":"K8s常见命令3","published":0,"updated":"2023-02-10T17:35:00.516Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfiik00030y1562tsf41p","content":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2><span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>"},{"title":"Charles安装、抓包HTTPS、IOS证书安装","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-05T17:38:00.000Z","_content":"Charles简介\nCharles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。\n\n<!--more-->\n\n一、下载地址：https://www.charlesproxy.com/\n1.选择对应的操作系统\n2.点击 DOwnload a free trial 进行下载\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68d75cfbab3a4e00156a)\n\n3.安装成功后，打开Charles的主页\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68d35cfbab3a4e001569)\n\n二 Web 抓取HTTPS协议\n虽然现在Charles能够直接抓包了，但是https协议的报我们是抓取不了的，需要安装SSL证书才可以\nCharles配置操作如下：\n2.1，点击顶部菜单栏【Help】–>选择【SSL Proxying】，点击【install Charles Root Certificate 】安装Charles根证书即可；\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68cf5cfbab3a4e001568)\n2.2 点击安装证书 -> 本地计算机 -> 将所有证书都放到下列储存 -> 点击下一步完成即可\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68cb5cfbab3a4e001567)\n2.3 设置HTTP/HTTPS协议端口\nProxy -> SSL Proxying Settiongs 在弹出选项卡中，勾选【Enable SSL Proxying】点击【add】\n添加以下Host和Port\n\n    1. *：*\n    2. *：443\n    3. *：80\n    \n     解释：\n    \t 在Host输入【*】表示接收任何主机\n    \t 80是http协议的默认端口\n    \t 443是https协议的默认端口\n\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68b15cfbab3a4e001566)\n2.4 打开抓取web端设置\nProxy -> Windows Proxy 勾选中即可\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68aa5cfbab3a4e001565)\n2.5 访问 www.baidu.com 能够抓取到接口并且接口下有数据表示成功\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68a25cfbab3a4e001564)\n\n    注意：如果接口下抓取是unknown表示失败\n    1. 协议未配置\n    2. 证书未安装\n    3. 防火墙未关闭\n\n三 Charles手机抓包证书安装(IOS)\nApp抓包\nCharles抓包不仅仅可以抓取来在电脑端的HTTP请求，也能够抓取来自App发出的HTTP请求，但是手机抓包需要在电脑端配置下，并且同时需要手机和电脑在同一网络下并且手机VPN也需要关闭\n\n3.1 端口号设置 Proxy -> Proxy Setting 默认端口号 8888\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68895cfbab3a4e001563)\n3.2 查看自己IP地址和端口号和下载证书网址\nHelp -> SSl Proxying -> Install Charles Root Certificate on a mobile Device or Remote Browser\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68745cfbab3a4e001562)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b686d5cfbab3a4e001561)\n3.3手机端设置：\n1，打开手机的设置页面；\n2，选择【无线局域网】；\n3，IOS点击连接的WIFI后面的感叹号，安卓应该是长按连接的WIFI；（注：这里主要以IOS为例）\n4，点击【配置代理】–>【手动】；\n5，输入本机【IP地址】以及【端口号】，根据自己情况合理配置；\n6，点击【存储】\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f9085cfbab3a4e0015dc)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f9315cfbab3a4e0015dd)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f95f5cfbab3a4e0015de)\n再次说明：服务器IP和端口号需要用到自己的IP和Charles上设置的端口\n查看方法：Help -> SSl Proxying -> Install Charles Root Certificate on a mobile Device or Remote Browser（步骤3.2 有截图）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f8c25cfbab3a4e0015db)\n3.4 检验代理配置是否成功\n打开浏览器验证下手机请求，当我们看到Charles里能抓到这个连接，就说明配置没问题，看到unknown，这个不要紧，那是我们没有安装针对手机端的证书，下面继续我们手机端HTTPS证书安装\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b684c5cfbab3a4e00155c)\n抓取手机HTTPS协议\n通过上面的设置，虽然来自我们手机端的Http协议请求可以抓取到，但是HTTPS协议的包是不能抓取的，需要安装配置证书才可以，现在手机上大多数都已经切到https很少由http协议的了\n\n3.5 Charles配置：\n手机打开浏览器输入 chls.pro/ssl,如下提示，点击允许（如果下载失败，请更换浏览器重新在下）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68455cfbab3a4e00155b)\n3.6 进入设置 -> 描述文件与设备管理 -> 点击未安装的证书进行安装\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68265cfbab3a4e001559)\n3.7 安装成功后需要在 通用 -> 关于本机 -> 证书信任设置 中勾选Charles证书（针对于IOS手机）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68095cfbab3a4e001558)\n最后，重新打开charles，手机访问网页/app就可以了\n\n注意事项：\n手机和电脑需要在同一网络下\n手机VPN需要关闭\n不同电脑对应不同证书，所以说你连接其他电脑需要重新下载手机证书\n如果抓出来的接口显示Unknown可以把防火墙关闭,再打开charles重新抓取\n\n\n【转载自CSDN,作者:qq_46022251】https://blog.csdn.net/qq_46022251/article/details/121653287","source":"_posts/Charles安装、抓包HTTPS、IOS证书安装.md","raw":"title: Charles安装、抓包HTTPS、IOS证书安装\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ntags:\n  - https proxy\n  - ''\ncategories:\n  - charles\ndate: 2023-02-06 01:38:00\n---\nCharles简介\nCharles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。\n\n<!--more-->\n\n一、下载地址：https://www.charlesproxy.com/\n1.选择对应的操作系统\n2.点击 DOwnload a free trial 进行下载\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68d75cfbab3a4e00156a)\n\n3.安装成功后，打开Charles的主页\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68d35cfbab3a4e001569)\n\n二 Web 抓取HTTPS协议\n虽然现在Charles能够直接抓包了，但是https协议的报我们是抓取不了的，需要安装SSL证书才可以\nCharles配置操作如下：\n2.1，点击顶部菜单栏【Help】–>选择【SSL Proxying】，点击【install Charles Root Certificate 】安装Charles根证书即可；\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68cf5cfbab3a4e001568)\n2.2 点击安装证书 -> 本地计算机 -> 将所有证书都放到下列储存 -> 点击下一步完成即可\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68cb5cfbab3a4e001567)\n2.3 设置HTTP/HTTPS协议端口\nProxy -> SSL Proxying Settiongs 在弹出选项卡中，勾选【Enable SSL Proxying】点击【add】\n添加以下Host和Port\n\n    1. *：*\n    2. *：443\n    3. *：80\n    \n     解释：\n    \t 在Host输入【*】表示接收任何主机\n    \t 80是http协议的默认端口\n    \t 443是https协议的默认端口\n\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68b15cfbab3a4e001566)\n2.4 打开抓取web端设置\nProxy -> Windows Proxy 勾选中即可\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68aa5cfbab3a4e001565)\n2.5 访问 www.baidu.com 能够抓取到接口并且接口下有数据表示成功\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68a25cfbab3a4e001564)\n\n    注意：如果接口下抓取是unknown表示失败\n    1. 协议未配置\n    2. 证书未安装\n    3. 防火墙未关闭\n\n三 Charles手机抓包证书安装(IOS)\nApp抓包\nCharles抓包不仅仅可以抓取来在电脑端的HTTP请求，也能够抓取来自App发出的HTTP请求，但是手机抓包需要在电脑端配置下，并且同时需要手机和电脑在同一网络下并且手机VPN也需要关闭\n\n3.1 端口号设置 Proxy -> Proxy Setting 默认端口号 8888\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68895cfbab3a4e001563)\n3.2 查看自己IP地址和端口号和下载证书网址\nHelp -> SSl Proxying -> Install Charles Root Certificate on a mobile Device or Remote Browser\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68745cfbab3a4e001562)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b686d5cfbab3a4e001561)\n3.3手机端设置：\n1，打开手机的设置页面；\n2，选择【无线局域网】；\n3，IOS点击连接的WIFI后面的感叹号，安卓应该是长按连接的WIFI；（注：这里主要以IOS为例）\n4，点击【配置代理】–>【手动】；\n5，输入本机【IP地址】以及【端口号】，根据自己情况合理配置；\n6，点击【存储】\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f9085cfbab3a4e0015dc)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f9315cfbab3a4e0015dd)\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f95f5cfbab3a4e0015de)\n再次说明：服务器IP和端口号需要用到自己的IP和Charles上设置的端口\n查看方法：Help -> SSl Proxying -> Install Charles Root Certificate on a mobile Device or Remote Browser（步骤3.2 有截图）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=6281f8c25cfbab3a4e0015db)\n3.4 检验代理配置是否成功\n打开浏览器验证下手机请求，当我们看到Charles里能抓到这个连接，就说明配置没问题，看到unknown，这个不要紧，那是我们没有安装针对手机端的证书，下面继续我们手机端HTTPS证书安装\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b684c5cfbab3a4e00155c)\n抓取手机HTTPS协议\n通过上面的设置，虽然来自我们手机端的Http协议请求可以抓取到，但是HTTPS协议的包是不能抓取的，需要安装配置证书才可以，现在手机上大多数都已经切到https很少由http协议的了\n\n3.5 Charles配置：\n手机打开浏览器输入 chls.pro/ssl,如下提示，点击允许（如果下载失败，请更换浏览器重新在下）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68455cfbab3a4e00155b)\n3.6 进入设置 -> 描述文件与设备管理 -> 点击未安装的证书进行安装\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68265cfbab3a4e001559)\n3.7 安装成功后需要在 通用 -> 关于本机 -> 证书信任设置 中勾选Charles证书（针对于IOS手机）\n![title](https://www.zzzang.cn/api/file/getImage?fileId=627b68095cfbab3a4e001558)\n最后，重新打开charles，手机访问网页/app就可以了\n\n注意事项：\n手机和电脑需要在同一网络下\n手机VPN需要关闭\n不同电脑对应不同证书，所以说你连接其他电脑需要重新下载手机证书\n如果抓出来的接口显示Unknown可以把防火墙关闭,再打开charles重新抓取\n\n\n【转载自CSDN,作者:qq_46022251】https://blog.csdn.net/qq_46022251/article/details/121653287","slug":"Charles安装、抓包HTTPS、IOS证书安装","published":1,"updated":"2023-02-10T17:33:31.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfiio00040y154yv74eg6","content":"<p>Charles简介<br>Charles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。</p>\n<span id=\"more\"></span>\n\n<p>一、下载地址：<a href=\"https://www.charlesproxy.com/\">https://www.charlesproxy.com/</a><br>1.选择对应的操作系统<br>2.点击 DOwnload a free trial 进行下载<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68d75cfbab3a4e00156a\" alt=\"title\"></p>\n<p>3.安装成功后，打开Charles的主页<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68d35cfbab3a4e001569\" alt=\"title\"></p>\n<p>二 Web 抓取HTTPS协议<br>虽然现在Charles能够直接抓包了，但是https协议的报我们是抓取不了的，需要安装SSL证书才可以<br>Charles配置操作如下：<br>2.1，点击顶部菜单栏【Help】–&gt;选择【SSL Proxying】，点击【install Charles Root Certificate 】安装Charles根证书即可；<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68cf5cfbab3a4e001568\" alt=\"title\"><br>2.2 点击安装证书 -&gt; 本地计算机 -&gt; 将所有证书都放到下列储存 -&gt; 点击下一步完成即可<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68cb5cfbab3a4e001567\" alt=\"title\"><br>2.3 设置HTTP/HTTPS协议端口<br>Proxy -&gt; SSL Proxying Settiongs 在弹出选项卡中，勾选【Enable SSL Proxying】点击【add】<br>添加以下Host和Port</p>\n<pre><code>1. *：*\n2. *：443\n3. *：80\n\n 解释：\n     在Host输入【*】表示接收任何主机\n     80是http协议的默认端口\n     443是https协议的默认端口\n</code></pre>\n<p><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68b15cfbab3a4e001566\" alt=\"title\"><br>2.4 打开抓取web端设置<br>Proxy -&gt; Windows Proxy 勾选中即可<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68aa5cfbab3a4e001565\" alt=\"title\"><br>2.5 访问 <a href=\"http://www.baidu.com/\">www.baidu.com</a> 能够抓取到接口并且接口下有数据表示成功<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68a25cfbab3a4e001564\" alt=\"title\"></p>\n<pre><code>注意：如果接口下抓取是unknown表示失败\n1. 协议未配置\n2. 证书未安装\n3. 防火墙未关闭\n</code></pre>\n<p>三 Charles手机抓包证书安装(IOS)<br>App抓包<br>Charles抓包不仅仅可以抓取来在电脑端的HTTP请求，也能够抓取来自App发出的HTTP请求，但是手机抓包需要在电脑端配置下，并且同时需要手机和电脑在同一网络下并且手机VPN也需要关闭</p>\n<p>3.1 端口号设置 Proxy -&gt; Proxy Setting 默认端口号 8888<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68895cfbab3a4e001563\" alt=\"title\"><br>3.2 查看自己IP地址和端口号和下载证书网址<br>Help -&gt; SSl Proxying -&gt; Install Charles Root Certificate on a mobile Device or Remote Browser<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68745cfbab3a4e001562\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b686d5cfbab3a4e001561\" alt=\"title\"><br>3.3手机端设置：<br>1，打开手机的设置页面；<br>2，选择【无线局域网】；<br>3，IOS点击连接的WIFI后面的感叹号，安卓应该是长按连接的WIFI；（注：这里主要以IOS为例）<br>4，点击【配置代理】–&gt;【手动】；<br>5，输入本机【IP地址】以及【端口号】，根据自己情况合理配置；<br>6，点击【存储】<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f9085cfbab3a4e0015dc\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f9315cfbab3a4e0015dd\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f95f5cfbab3a4e0015de\" alt=\"title\"><br>再次说明：服务器IP和端口号需要用到自己的IP和Charles上设置的端口<br>查看方法：Help -&gt; SSl Proxying -&gt; Install Charles Root Certificate on a mobile Device or Remote Browser（步骤3.2 有截图）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f8c25cfbab3a4e0015db\" alt=\"title\"><br>3.4 检验代理配置是否成功<br>打开浏览器验证下手机请求，当我们看到Charles里能抓到这个连接，就说明配置没问题，看到unknown，这个不要紧，那是我们没有安装针对手机端的证书，下面继续我们手机端HTTPS证书安装<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b684c5cfbab3a4e00155c\" alt=\"title\"><br>抓取手机HTTPS协议<br>通过上面的设置，虽然来自我们手机端的Http协议请求可以抓取到，但是HTTPS协议的包是不能抓取的，需要安装配置证书才可以，现在手机上大多数都已经切到https很少由http协议的了</p>\n<p>3.5 Charles配置：<br>手机打开浏览器输入 chls.pro/ssl,如下提示，点击允许（如果下载失败，请更换浏览器重新在下）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68455cfbab3a4e00155b\" alt=\"title\"><br>3.6 进入设置 -&gt; 描述文件与设备管理 -&gt; 点击未安装的证书进行安装<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68265cfbab3a4e001559\" alt=\"title\"><br>3.7 安装成功后需要在 通用 -&gt; 关于本机 -&gt; 证书信任设置 中勾选Charles证书（针对于IOS手机）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68095cfbab3a4e001558\" alt=\"title\"><br>最后，重新打开charles，手机访问网页/app就可以了</p>\n<p>注意事项：<br>手机和电脑需要在同一网络下<br>手机VPN需要关闭<br>不同电脑对应不同证书，所以说你连接其他电脑需要重新下载手机证书<br>如果抓出来的接口显示Unknown可以把防火墙关闭,再打开charles重新抓取</p>\n<p>【转载自CSDN,作者:qq_46022251】<a href=\"https://blog.csdn.net/qq_46022251/article/details/121653287\">https://blog.csdn.net/qq_46022251/article/details/121653287</a></p>\n","site":{"data":{}},"excerpt":"<p>Charles简介<br>Charles是一个HTTP代理服务器,HTTP监视器,反转代理服务器，当浏览器连接Charles的代理访问互联网时，Charles可以监控浏览器发送和接收的所有数据。它允许一个开发者查看所有连接互联网的HTTP通信，这些包括request, response和HTTP headers （包含cookies与caching信息）。</p>","more":"<p>一、下载地址：<a href=\"https://www.charlesproxy.com/\">https://www.charlesproxy.com/</a><br>1.选择对应的操作系统<br>2.点击 DOwnload a free trial 进行下载<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68d75cfbab3a4e00156a\" alt=\"title\"></p>\n<p>3.安装成功后，打开Charles的主页<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68d35cfbab3a4e001569\" alt=\"title\"></p>\n<p>二 Web 抓取HTTPS协议<br>虽然现在Charles能够直接抓包了，但是https协议的报我们是抓取不了的，需要安装SSL证书才可以<br>Charles配置操作如下：<br>2.1，点击顶部菜单栏【Help】–&gt;选择【SSL Proxying】，点击【install Charles Root Certificate 】安装Charles根证书即可；<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68cf5cfbab3a4e001568\" alt=\"title\"><br>2.2 点击安装证书 -&gt; 本地计算机 -&gt; 将所有证书都放到下列储存 -&gt; 点击下一步完成即可<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68cb5cfbab3a4e001567\" alt=\"title\"><br>2.3 设置HTTP/HTTPS协议端口<br>Proxy -&gt; SSL Proxying Settiongs 在弹出选项卡中，勾选【Enable SSL Proxying】点击【add】<br>添加以下Host和Port</p>\n<pre><code>1. *：*\n2. *：443\n3. *：80\n\n 解释：\n     在Host输入【*】表示接收任何主机\n     80是http协议的默认端口\n     443是https协议的默认端口\n</code></pre>\n<p><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68b15cfbab3a4e001566\" alt=\"title\"><br>2.4 打开抓取web端设置<br>Proxy -&gt; Windows Proxy 勾选中即可<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68aa5cfbab3a4e001565\" alt=\"title\"><br>2.5 访问 <a href=\"http://www.baidu.com/\">www.baidu.com</a> 能够抓取到接口并且接口下有数据表示成功<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68a25cfbab3a4e001564\" alt=\"title\"></p>\n<pre><code>注意：如果接口下抓取是unknown表示失败\n1. 协议未配置\n2. 证书未安装\n3. 防火墙未关闭\n</code></pre>\n<p>三 Charles手机抓包证书安装(IOS)<br>App抓包<br>Charles抓包不仅仅可以抓取来在电脑端的HTTP请求，也能够抓取来自App发出的HTTP请求，但是手机抓包需要在电脑端配置下，并且同时需要手机和电脑在同一网络下并且手机VPN也需要关闭</p>\n<p>3.1 端口号设置 Proxy -&gt; Proxy Setting 默认端口号 8888<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68895cfbab3a4e001563\" alt=\"title\"><br>3.2 查看自己IP地址和端口号和下载证书网址<br>Help -&gt; SSl Proxying -&gt; Install Charles Root Certificate on a mobile Device or Remote Browser<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68745cfbab3a4e001562\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b686d5cfbab3a4e001561\" alt=\"title\"><br>3.3手机端设置：<br>1，打开手机的设置页面；<br>2，选择【无线局域网】；<br>3，IOS点击连接的WIFI后面的感叹号，安卓应该是长按连接的WIFI；（注：这里主要以IOS为例）<br>4，点击【配置代理】–&gt;【手动】；<br>5，输入本机【IP地址】以及【端口号】，根据自己情况合理配置；<br>6，点击【存储】<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f9085cfbab3a4e0015dc\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f9315cfbab3a4e0015dd\" alt=\"title\"><br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f95f5cfbab3a4e0015de\" alt=\"title\"><br>再次说明：服务器IP和端口号需要用到自己的IP和Charles上设置的端口<br>查看方法：Help -&gt; SSl Proxying -&gt; Install Charles Root Certificate on a mobile Device or Remote Browser（步骤3.2 有截图）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=6281f8c25cfbab3a4e0015db\" alt=\"title\"><br>3.4 检验代理配置是否成功<br>打开浏览器验证下手机请求，当我们看到Charles里能抓到这个连接，就说明配置没问题，看到unknown，这个不要紧，那是我们没有安装针对手机端的证书，下面继续我们手机端HTTPS证书安装<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b684c5cfbab3a4e00155c\" alt=\"title\"><br>抓取手机HTTPS协议<br>通过上面的设置，虽然来自我们手机端的Http协议请求可以抓取到，但是HTTPS协议的包是不能抓取的，需要安装配置证书才可以，现在手机上大多数都已经切到https很少由http协议的了</p>\n<p>3.5 Charles配置：<br>手机打开浏览器输入 chls.pro/ssl,如下提示，点击允许（如果下载失败，请更换浏览器重新在下）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68455cfbab3a4e00155b\" alt=\"title\"><br>3.6 进入设置 -&gt; 描述文件与设备管理 -&gt; 点击未安装的证书进行安装<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68265cfbab3a4e001559\" alt=\"title\"><br>3.7 安装成功后需要在 通用 -&gt; 关于本机 -&gt; 证书信任设置 中勾选Charles证书（针对于IOS手机）<br><img src=\"https://www.zzzang.cn/api/file/getImage?fileId=627b68095cfbab3a4e001558\" alt=\"title\"><br>最后，重新打开charles，手机访问网页/app就可以了</p>\n<p>注意事项：<br>手机和电脑需要在同一网络下<br>手机VPN需要关闭<br>不同电脑对应不同证书，所以说你连接其他电脑需要重新下载手机证书<br>如果抓出来的接口显示Unknown可以把防火墙关闭,再打开charles重新抓取</p>\n<p>【转载自CSDN,作者:qq_46022251】<a href=\"https://blog.csdn.net/qq_46022251/article/details/121653287\">https://blog.csdn.net/qq_46022251/article/details/121653287</a></p>"},{"title":"K8s常见命令","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","thumbnail":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-10T03:44:00.000Z","_content":"#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","source":"_posts/K8s常见命令.md","raw":"title: K8s常见命令\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nthumbnail: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ntags:\n  - Kubernetes\ncategories:\n  - Kubernetes\ndate: 2023-02-10 11:44:00\n---\n#  `K8s`常见命令篇\n\nkubectl命令`Tips`:\t 万物可加` |grep 'xxxx_keyword' `对结果过滤\n\n## 1.命名空间章 `namespace` :\n\n<!--more-->\n\n```shell\n1.1\t查看所有命名空间\n\tkubectl get namespace\n==> 缩写:kubectl get ns\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > tmp.json\n\t# kubectl get ns [env-hotfix-v2-66-1] -o json > /tmp/[env-hotfix-v2-66-1].json\n\t# kubectl replace --raw \"/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize\" -f /tmp/[env-hotfix-v2-66-1].json\n\n1.2\t查看命名空间详情\n\tkubectl describe namespace xxx\n\t\n1.3\t删除指定命名空间 以及下面所有的pod\n\tkubectl delete ns [env-feature-xxxxx]\n eg:kubectl delete ns env-hotfix-v2-66-1\n eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0\n\t\n1.4\t创建命名空间\n\tkubectl create ns [env-feature-xxxxx]\n```\n\n## 2. 服务章 `services` :\n\n> ( 弹性伸缩概念 Service 1: n Pods)\n\n```shell\n2.1 列出K8s内——所有服务services\n\tkubectl get services \n==> 缩写:kubectl get svc\n\n2.2 列出K8s内——[指定命名空间内]——所有服务services\n\tkubectl get services -n [env-feature-xxxxx]\n\tkubectl get svc -n [env-feature-xxxxx] |grep mysql\n\n2.3 等价于: 列出——所有 namespace ——所有容器pods\n===> kubectl get pods --all-namespaces \n===> kubectl get pods --all-namespaces  -o wide\n\n```\n\n## 3. 容器章 `pods` :\n\n```shell\n3.1 列出K8s内——所有容器——pods\n\tkubectl get pod\n\n3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)\n\tkubectl get pods -o wide \n\n3.3 列出K8s内——[指定命名空间内]——所有容器pods\n\tkubectl get pods -n [env-feature-xxxxx]\n\n3.5 列出K8s内——[指定命名空间内]——单个指定pods\n\tkubectl get pod [pod_name]\n\tkubectl get pod [pod_name] -n [namespace_name]\n```\n\n## 4. 容器日志章 `logs` :\n\n-\t4.1 group pods ≈ service\n\n```shell\n4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f\n\n4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep 'xxxx_keyword'\n\n4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志\n\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep 'xxxx_keyword'\n```\n\n-\t4.2 single pod\n\n```shell\n4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f\n\n4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字\n\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep 'xxxx_keyword'\n```\n\n\n## 5. 容器内部执行命令章 `exec` :\n\n```shell\n5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh\n\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash\n eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash\n#eg:kubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p\n\n5.2 组合多管道pod名称传参exec,进入内部执行\n\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh\n```\n\n## 6.查看node / pod 的信息:`kubectl describe`\n\n```shell\n6.1 查看node描述：\n\tkubectl describe node [node_name]\n\n6.2 查看pod描述：\n\tkubectl describe pod [pod_name] -n [namespace_name]\n```\n\n## 额外扩展1 - 查看集群信息:`kubectl cluster-info`\n\n```shell\n> kubectl cluster-info\n\nKubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com\nCoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n```\n\n## 额外扩展2 - 查看各组件信息:`kubectl get componentstatuses`\n\n```shell\n> kubectl get componentstatuses\n\nWarning: v1 ComponentStatus is deprecated in v1.19+\nNAME               STATUS    MESSAGE            ERROR   \ncontroller-manager Unhealthy Get \"http://127.0.0.1:10252/healthz\": dial tcp 127.0.0.1:10252: connect: connection refused\nscheduler          Unhealthy Get \"http://127.0.0.1:10251/healthz\": dial tcp 127.0.0.1:10251: connect: connection refused\netcd-1             Healthy   {\"health\":\"true\",\"reason\":\"\"}\netcd-0             Healthy   {\"health\":\"true\"}\n```\n\n## 额外扩展3 - kubectl所有帮助指令\n\n> kubectl --help\n\n```shell\nkubectl用于控制Kubernetes集群管理器。\n更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/\n\nBasic Commands (Beginner):基本命令(初学者):\n create   Create a resource from a file or from stdin.\n\t\t  从文件或stdin中创建资源。 \n expose   Take a replication controller, service, deployment or pod and expose it as a new \n\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service\n run      Run a particular image on the cluster\n\t\t  run在集群上运行一个特定的映像 \n set      Set specific features on objects\n\t\t  set设置对象的具体特性 \n\nBasic Commands (Intermediate):基本命令(中级):\n  explain Documentation of resources\n\t\t  资源文档\n  get     Display one or many resources\n\t\t  显示一个或多个资源\n  edit    Edit a resource on the server\n\t\t  edit编辑服务器上的资源\n  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector\n\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源\n\nDeploy Commands:部署命令:\n  rollout    Manage the rollout of a resource\n\t\t\t rollout管理资源的滚出\n  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller\n\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小\n  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController\n\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController\n\nCluster Management Commands:集群管理命令:\n  certificate   Modify certificate resources.\n\t\t\t\tcertificate修改证书资源。\n  cluster-info  Display cluster info\n\t\t\t\tcluster-info显示集群信息\n  top           Display Resource (CPU/Memory/Storage) usage.\n\t\t\t\ttop显示资源(CPU/内存/存储)占用率。\n  cordon        Mark node as unschedulable\n\t\t\t\t将节点标记为不可调度\n  uncordon      Mark node as schedulable\n\t\t\t\t将节点标记为可调度的\n  drain         Drain node in preparation for maintenance\n\t\t\t\tdrain排水节点，为维护做好准备\n  taint         Update the taints on one or more nodes\n\t\t\t\ttaint更新一个或多个节点上的污点\n\nTroubleshooting and Debugging Commands:故障处理和调试命令:\n  describe      Show details of a specific resource or group of resources\n\t\t\t\t描述显示特定资源或资源组的详细信息\n  logs          Print the logs for a container in a pod\n\t\t\t\tlogs打印pod中容器的日志\n  attach        Attach to a running container\n\t\t\t\tattach附着在运行中的容器上\n  exec          Execute a command in a container\n\t\t\t\texec在容器中执行命令\n  port-forward  Forward one or more local ports to a pod\n\t\t\t\tport-forward将一个或多个本地端口转发到pod\n  proxy         Run a proxy to the Kubernetes API server\n\t\t\t\tproxy向Kubernetes API服务器运行代理\n  cp            Copy files and directories to and from containers.\n\t\t\t\t在容器中拷贝文件和目录。\n  auth          Inspect authorization\n\t\t\t\t检查授权\n  debug         Create debugging sessions for troubleshooting workloads and nodes\n\t\t\t\t为故障排除工作负载和节点创建调试会话\n\nAdvanced Commands:先进的命令\n  diff          Diff live version against would-be applied version\n\t\t\t\tdiff实际版本与潜在应用版本的差异\n  apply         Apply a configuration to a resource by filename or stdin\n\t\t\t\t通过文件名或stdin将配置应用到资源\n  patch         Update field(s) of a resource\n\t\t\t\tpatch资源的更新字段\n  replace       Replace a resource by filename or stdin\n\t\t\t\treplace用文件名或标准输入替换资源\n  wait          Experimental: Wait for a specific condition on one or many resources.\n\t\t\t\t实验性:等待一个或多个资源上的特定条件。\n  kustomize     Build a kustomization target from a directory or a remote url.\n\t\t\t\t从目录或远程url构建一个kustomize目标。\n\nSettings Commands:设置命令\n  label         Update the labels on a resource\n\t\t\t\tlabel更新资源标签\n  annotate      Update the annotations on a resource\n\t\t\t\t注解更新资源的注解\n  completion    Output shell completion code for the specified shell (bash or zsh)\n\t\t\t\t输出指定shell的shell补全代码(bash或zsh)\n\nOther Commands:其他命令\n  api-resources Print the supported API resources on the server\n\t\t\t\tAPI -resources打印服务器上支持的API资源\n  api-versions  Print the supported API versions on the server, in the form of \"group/version\"\n\t\t\t\t打印服务器上支持的API版本，格式为\"group/version\"\n  config        Modify kubeconfig files\n\t\t\t\tconfig修改kubecconfig文件\n  plugin        Provides utilities for interacting with plugins.\n\t\t\t\tplugin提供与插件交互的实用程序\n  version       Print the client and server version information\n\t\t\t\tversion打印客户端和服务器版本信息\n```","slug":"K8s常见命令","published":1,"updated":"2023-02-10T17:34:38.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfiis00050y15cb5x089e","content":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2><span id=\"more\"></span>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"K8s常见命令篇\"><a href=\"#K8s常见命令篇\" class=\"headerlink\" title=\"K8s常见命令篇\"></a><code>K8s</code>常见命令篇</h1><p>kubectl命令<code>Tips</code>:     万物可加<code>|grep &#39;xxxx_keyword&#39;</code>对结果过滤</p>\n<h2 id=\"1-命名空间章-namespace\"><a href=\"#1-命名空间章-namespace\" class=\"headerlink\" title=\"1.命名空间章 namespace :\"></a>1.命名空间章 <code>namespace</code> :</h2>","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t查看所有命名空间</span><br><span class=\"line\">\tkubectl get namespace</span><br><span class=\"line\">==&gt; 缩写:kubectl get ns</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; tmp.json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl get ns [env-hotfix-v2-66-1] -o json &gt; /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">kubectl replace --raw <span class=\"string\">&quot;/api/v1/namespaces/[env-hotfix-v2-66-1]/finalize&quot;</span> -f /tmp/[env-hotfix-v2-66-1].json</span></span><br><span class=\"line\"></span><br><span class=\"line\">1.2\t查看命名空间详情</span><br><span class=\"line\">\tkubectl describe namespace xxx</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.3\t删除指定命名空间 以及下面所有的pod</span><br><span class=\"line\">\tkubectl delete ns [env-feature-xxxxx]</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1</span><br><span class=\"line\"> eg:kubectl delete ns env-hotfix-v2-66-1 --force --grace-period=0</span><br><span class=\"line\">\t</span><br><span class=\"line\">1.4\t创建命名空间</span><br><span class=\"line\">\tkubectl create ns [env-feature-xxxxx]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-服务章-services\"><a href=\"#2-服务章-services\" class=\"headerlink\" title=\"2. 服务章 services :\"></a>2. 服务章 <code>services</code> :</h2><blockquote>\n<p>( 弹性伸缩概念 Service 1: n Pods)</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2.1 列出K8s内——所有服务services</span><br><span class=\"line\">\tkubectl get services </span><br><span class=\"line\">==&gt; 缩写:kubectl get svc</span><br><span class=\"line\"></span><br><span class=\"line\">2.2 列出K8s内——[指定命名空间内]——所有服务services</span><br><span class=\"line\">\tkubectl get services -n [env-feature-xxxxx]</span><br><span class=\"line\">\tkubectl get svc -n [env-feature-xxxxx] |grep mysql</span><br><span class=\"line\"></span><br><span class=\"line\">2.3 等价于: 列出——所有 namespace ——所有容器pods</span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces </span><br><span class=\"line\">===&gt; kubectl get pods --all-namespaces  -o wide</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3-容器章-pods\"><a href=\"#3-容器章-pods\" class=\"headerlink\" title=\"3. 容器章 pods :\"></a>3. 容器章 <code>pods</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 列出K8s内——所有容器——pods</span><br><span class=\"line\">\tkubectl get pod</span><br><span class=\"line\"></span><br><span class=\"line\">3.2 列出K8s内——所有容器pods——并显示详细信息(ip网络信息)</span><br><span class=\"line\">\tkubectl get pods -o wide </span><br><span class=\"line\"></span><br><span class=\"line\">3.3 列出K8s内——[指定命名空间内]——所有容器pods</span><br><span class=\"line\">\tkubectl get pods -n [env-feature-xxxxx]</span><br><span class=\"line\"></span><br><span class=\"line\">3.5 列出K8s内——[指定命名空间内]——单个指定pods</span><br><span class=\"line\">\tkubectl get pod [pod_name]</span><br><span class=\"line\">\tkubectl get pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-容器日志章-logs\"><a href=\"#4-容器日志章-logs\" class=\"headerlink\" title=\"4. 容器日志章 logs :\"></a>4. 容器日志章 <code>logs</code> :</h2><ul>\n<li>   4.1 group pods ≈ service</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1.1 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.2 持续监听日志——[指定命名空间内]——指定标签Lable(应用名称)——一套应用容器组的所有pods日志——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f | grep &#x27;xxxx_keyword&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">4.1.3 从现在起实时滚动日志持续输出,并展示最近的10行历史日志</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] -l app=[ceres-moduleName] -f --tail=10 | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>   4.2 single pod</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.2.1 持续监听日志——[指定命名空间内]——指定容器pod名称</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f</span><br><span class=\"line\"></span><br><span class=\"line\">4.2.2 持续监听日志——[指定命名空间内]——指定容器pods名称——并过滤查询关键字</span><br><span class=\"line\">\t  kubectl logs -n [env-feature-xxxxx] [ceres-moduleName-pod_random_num] -f | grep &#x27;xxxx_keyword&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"5-容器内部执行命令章-exec\"><a href=\"#5-容器内部执行命令章-exec\" class=\"headerlink\" title=\"5. 容器内部执行命令章 exec :\"></a>5. 容器内部执行命令章 <code>exec</code> :</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1 进入 指定命名空间 指定mysql容器 执行shell/bash命令</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- sh</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] [mysql-pod_random_num] -- bash</span><br><span class=\"line\"> eg:kubectl exec -it -n [env-feature-xxxxx]  mysql-5b9c45bb96-tggll /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">eg:kubectl <span class=\"built_in\">exec</span> -it -n [env-feature-xxxxx] [mysql-pod_random_num] mysql -u root -p</span></span><br><span class=\"line\"></span><br><span class=\"line\">5.2 组合多管道pod名称传参exec,进入内部执行</span><br><span class=\"line\">\tkubectl exec -it -n [env-feature-xxxxx] $(kubectl -n [env-feature-xxxxx] get pods -l app=mysql -o=name) --  sh</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-查看node-pod-的信息-kubectl-describe\"><a href=\"#6-查看node-pod-的信息-kubectl-describe\" class=\"headerlink\" title=\"6.查看node / pod 的信息:kubectl describe\"></a>6.查看node / pod 的信息:<code>kubectl describe</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">6.1 查看node描述：</span><br><span class=\"line\">\tkubectl describe node [node_name]</span><br><span class=\"line\"></span><br><span class=\"line\">6.2 查看pod描述：</span><br><span class=\"line\">\tkubectl describe pod [pod_name] -n [namespace_name]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展1-查看集群信息-kubectl-cluster-info\"><a href=\"#额外扩展1-查看集群信息-kubectl-cluster-info\" class=\"headerlink\" title=\"额外扩展1 - 查看集群信息:kubectl cluster-info\"></a>额外扩展1 - 查看集群信息:<code>kubectl cluster-info</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl cluster-info</span></span><br><span class=\"line\"></span><br><span class=\"line\">Kubernetes control plane is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com</span><br><span class=\"line\">CoreDNS is running at https://cls-xxxxxxxx.ccs.tencent-cloud.com/api/v1/namespaces/kube-system/services/kube-dns:dns-tcp/proxy</span><br><span class=\"line\"></span><br><span class=\"line\">To further debug and diagnose cluster problems, use &#x27;kubectl cluster-info dump&#x27;.</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展2-查看各组件信息-kubectl-get-componentstatuses\"><a href=\"#额外扩展2-查看各组件信息-kubectl-get-componentstatuses\" class=\"headerlink\" title=\"额外扩展2 - 查看各组件信息:kubectl get componentstatuses\"></a>额外扩展2 - 查看各组件信息:<code>kubectl get componentstatuses</code></h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">kubectl get componentstatuses</span></span><br><span class=\"line\"></span><br><span class=\"line\">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class=\"line\">NAME               STATUS    MESSAGE            ERROR   </span><br><span class=\"line\">controller-manager Unhealthy Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused</span><br><span class=\"line\">scheduler          Unhealthy Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused</span><br><span class=\"line\">etcd-1             Healthy   &#123;&quot;health&quot;:&quot;true&quot;,&quot;reason&quot;:&quot;&quot;&#125;</span><br><span class=\"line\">etcd-0             Healthy   &#123;&quot;health&quot;:&quot;true&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"额外扩展3-kubectl所有帮助指令\"><a href=\"#额外扩展3-kubectl所有帮助指令\" class=\"headerlink\" title=\"额外扩展3 - kubectl所有帮助指令\"></a>额外扩展3 - kubectl所有帮助指令</h2><blockquote>\n<p>kubectl –help</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl用于控制Kubernetes集群管理器。</span><br><span class=\"line\">更多信息请访问:https://kubernetes.io/docs/reference/kubectl/overview/</span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Beginner):基本命令(初学者):</span><br><span class=\"line\"> create   Create a resource from a file or from stdin.</span><br><span class=\"line\">\t\t  从文件或stdin中创建资源。 </span><br><span class=\"line\"> expose   Take a replication controller, service, deployment or pod and expose it as a new </span><br><span class=\"line\">\t\t  获取一个复制控制器、服务、部署或pod，并将其公开为一个新的Kubernetes服务 Kubernetes Service</span><br><span class=\"line\"> run      Run a particular image on the cluster</span><br><span class=\"line\">\t\t  run在集群上运行一个特定的映像 </span><br><span class=\"line\"> set      Set specific features on objects</span><br><span class=\"line\">\t\t  set设置对象的具体特性 </span><br><span class=\"line\"></span><br><span class=\"line\">Basic Commands (Intermediate):基本命令(中级):</span><br><span class=\"line\">  explain Documentation of resources</span><br><span class=\"line\">\t\t  资源文档</span><br><span class=\"line\">  get     Display one or many resources</span><br><span class=\"line\">\t\t  显示一个或多个资源</span><br><span class=\"line\">  edit    Edit a resource on the server</span><br><span class=\"line\">\t\t  edit编辑服务器上的资源</span><br><span class=\"line\">  delete  Delete resources by filenames, stdin, resources and names, or by resources and label selector</span><br><span class=\"line\">\t\t  delete按文件名、stdin、资源和名称或按资源和标签选择器删除资源</span><br><span class=\"line\"></span><br><span class=\"line\">Deploy Commands:部署命令:</span><br><span class=\"line\">  rollout    Manage the rollout of a resource</span><br><span class=\"line\">\t\t\t rollout管理资源的滚出</span><br><span class=\"line\">  scale      Set a new size for a Deployment, ReplicaSet or Replication Controller</span><br><span class=\"line\">\t\t\t scale为部署控制器、复制集控制器或复制控制器设置新的大小</span><br><span class=\"line\">  autoscale  Auto-scale a Deployment, ReplicaSet, or ReplicationController</span><br><span class=\"line\">\t\t\t autoscale自动缩放Deployment、ReplicaSet或ReplicationController</span><br><span class=\"line\"></span><br><span class=\"line\">Cluster Management Commands:集群管理命令:</span><br><span class=\"line\">  certificate   Modify certificate resources.</span><br><span class=\"line\">\t\t\t\tcertificate修改证书资源。</span><br><span class=\"line\">  cluster-info  Display cluster info</span><br><span class=\"line\">\t\t\t\tcluster-info显示集群信息</span><br><span class=\"line\">  top           Display Resource (CPU/Memory/Storage) usage.</span><br><span class=\"line\">\t\t\t\ttop显示资源(CPU/内存/存储)占用率。</span><br><span class=\"line\">  cordon        Mark node as unschedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为不可调度</span><br><span class=\"line\">  uncordon      Mark node as schedulable</span><br><span class=\"line\">\t\t\t\t将节点标记为可调度的</span><br><span class=\"line\">  drain         Drain node in preparation for maintenance</span><br><span class=\"line\">\t\t\t\tdrain排水节点，为维护做好准备</span><br><span class=\"line\">  taint         Update the taints on one or more nodes</span><br><span class=\"line\">\t\t\t\ttaint更新一个或多个节点上的污点</span><br><span class=\"line\"></span><br><span class=\"line\">Troubleshooting and Debugging Commands:故障处理和调试命令:</span><br><span class=\"line\">  describe      Show details of a specific resource or group of resources</span><br><span class=\"line\">\t\t\t\t描述显示特定资源或资源组的详细信息</span><br><span class=\"line\">  logs          Print the logs for a container in a pod</span><br><span class=\"line\">\t\t\t\tlogs打印pod中容器的日志</span><br><span class=\"line\">  attach        Attach to a running container</span><br><span class=\"line\">\t\t\t\tattach附着在运行中的容器上</span><br><span class=\"line\">  exec          Execute a command in a container</span><br><span class=\"line\">\t\t\t\texec在容器中执行命令</span><br><span class=\"line\">  port-forward  Forward one or more local ports to a pod</span><br><span class=\"line\">\t\t\t\tport-forward将一个或多个本地端口转发到pod</span><br><span class=\"line\">  proxy         Run a proxy to the Kubernetes API server</span><br><span class=\"line\">\t\t\t\tproxy向Kubernetes API服务器运行代理</span><br><span class=\"line\">  cp            Copy files and directories to and from containers.</span><br><span class=\"line\">\t\t\t\t在容器中拷贝文件和目录。</span><br><span class=\"line\">  auth          Inspect authorization</span><br><span class=\"line\">\t\t\t\t检查授权</span><br><span class=\"line\">  debug         Create debugging sessions for troubleshooting workloads and nodes</span><br><span class=\"line\">\t\t\t\t为故障排除工作负载和节点创建调试会话</span><br><span class=\"line\"></span><br><span class=\"line\">Advanced Commands:先进的命令</span><br><span class=\"line\">  diff          Diff live version against would-be applied version</span><br><span class=\"line\">\t\t\t\tdiff实际版本与潜在应用版本的差异</span><br><span class=\"line\">  apply         Apply a configuration to a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\t通过文件名或stdin将配置应用到资源</span><br><span class=\"line\">  patch         Update field(s) of a resource</span><br><span class=\"line\">\t\t\t\tpatch资源的更新字段</span><br><span class=\"line\">  replace       Replace a resource by filename or stdin</span><br><span class=\"line\">\t\t\t\treplace用文件名或标准输入替换资源</span><br><span class=\"line\">  wait          Experimental: Wait for a specific condition on one or many resources.</span><br><span class=\"line\">\t\t\t\t实验性:等待一个或多个资源上的特定条件。</span><br><span class=\"line\">  kustomize     Build a kustomization target from a directory or a remote url.</span><br><span class=\"line\">\t\t\t\t从目录或远程url构建一个kustomize目标。</span><br><span class=\"line\"></span><br><span class=\"line\">Settings Commands:设置命令</span><br><span class=\"line\">  label         Update the labels on a resource</span><br><span class=\"line\">\t\t\t\tlabel更新资源标签</span><br><span class=\"line\">  annotate      Update the annotations on a resource</span><br><span class=\"line\">\t\t\t\t注解更新资源的注解</span><br><span class=\"line\">  completion    Output shell completion code for the specified shell (bash or zsh)</span><br><span class=\"line\">\t\t\t\t输出指定shell的shell补全代码(bash或zsh)</span><br><span class=\"line\"></span><br><span class=\"line\">Other Commands:其他命令</span><br><span class=\"line\">  api-resources Print the supported API resources on the server</span><br><span class=\"line\">\t\t\t\tAPI -resources打印服务器上支持的API资源</span><br><span class=\"line\">  api-versions  Print the supported API versions on the server, in the form of &quot;group/version&quot;</span><br><span class=\"line\">\t\t\t\t打印服务器上支持的API版本，格式为&quot;group/version&quot;</span><br><span class=\"line\">  config        Modify kubeconfig files</span><br><span class=\"line\">\t\t\t\tconfig修改kubecconfig文件</span><br><span class=\"line\">  plugin        Provides utilities for interacting with plugins.</span><br><span class=\"line\">\t\t\t\tplugin提供与插件交互的实用程序</span><br><span class=\"line\">  version       Print the client and server version information</span><br><span class=\"line\">\t\t\t\tversion打印客户端和服务器版本信息</span><br></pre></td></tr></table></figure>"},{"title":"Kong/Konga - Docker容器化安装","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-05T17:37:00.000Z","_content":"# 1.0 安装kong + postgresDB\n```\ndocker network create kong-net\n```\n<!--more-->\n```\ndocker pull postgres:latest\n```\n```\ndocker run -d --name kong-database \\\n               --network=kong-net \\\n               -p 5432:5432 \\\n               -e \"POSTGRES_USER=kong\" \\\n               -e \"POSTGRES_DB=kong\" \\\n               postgres:latest\n```\n\n压缩版：`docker run -d --name kong-database --network=kong-net -p 5432:5432 -e \"POSTGRES_USER=kong\" -e \"POSTGRES_DB=kong\" postgres:latest`\n\n`docker pull kong:latest`\n\n```\ndocker run --rm \\\n     --network=kong-net \\\n     -e \"KONG_DATABASE=postgres\" \\\n     -e \"KONG_PG_HOST=kong-database\" \\\n     kong:latest kong migrations bootstrap\n```\n压缩版：`docker run --rm --network=kong-net -e \"KONG_DATABASE=postgres\" -e \"KONG_PG_HOST=kong-database\" kong:latest kong migrations bootstrap`\n\n```\ndocker run -d --name kong \\\n     --network=kong-net \\\n     -e \"KONG_DATABASE=postgres\" \\\n     -e \"KONG_PG_HOST=kong-database\" \\\n     -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n     -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n     -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n     -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n     -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" \\\n     -p 8000:8000 \\\n     -p 8443:8443 \\\n     -p 8001:8001 \\\n     -p 8444:8444 \\\n     kong:latest\n```\n压缩版：`docker run -d --name kong --network=kong-net -e \"KONG_DATABASE=postgres\" -e \"KONG_PG_HOST=kong-database\" -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\"  -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 kong:latest`\n\n`部署成功后，可以访问http://{ip}:8001/检查是否正常运行`\n\n\n# 2.0 安装监控 Konga\n```\ndocker pull pantsel/konga:latest\n```\n\n - 方案1 konga\n```\ndocker run --rm pantsel/konga:latest -c prepare -a postgres -u postgresql://kong:@172.18.0.1:5432/konga\n```\n\n```\ndocker run -p 1337:1337 \\\n        --network kong-net \\\n        --name konga \\\n        -e \"NODE_ENV=production\"  \\\n        -e \"DB_ADAPTER=postgres\" \\\n        -e \"DB_URI=postgresql://kong:@172.18.0.1:5432/konga\" \\\n        pantsel/konga\n```\n压缩版:`docker run -p 1337:1337 --network kong-net --name konga -e \"NODE_ENV=production\"  -e \"DB_ADAPTER=postgres\" -e \"DB_URI=postgresql://kong:@172.18.0.1:5432/konga\" pantsel/konga`\n\n - 方案2 kong-dashboard\n```\ndocker run --rm -p 8080:8080 --network=kong-net pgbi/kong-dashboard  start --kong-url http://kong:8001\n```\n\n\n`http://{konga-ip}:1337/`","source":"_posts/Kong-Konga-Docker容器化安装.md","raw":"title: Kong/Konga - Docker容器化安装\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ntags:\n  - Docker\ncategories:\n  - Docker\ndate: 2023-02-06 01:37:00\n---\n# 1.0 安装kong + postgresDB\n```\ndocker network create kong-net\n```\n<!--more-->\n```\ndocker pull postgres:latest\n```\n```\ndocker run -d --name kong-database \\\n               --network=kong-net \\\n               -p 5432:5432 \\\n               -e \"POSTGRES_USER=kong\" \\\n               -e \"POSTGRES_DB=kong\" \\\n               postgres:latest\n```\n\n压缩版：`docker run -d --name kong-database --network=kong-net -p 5432:5432 -e \"POSTGRES_USER=kong\" -e \"POSTGRES_DB=kong\" postgres:latest`\n\n`docker pull kong:latest`\n\n```\ndocker run --rm \\\n     --network=kong-net \\\n     -e \"KONG_DATABASE=postgres\" \\\n     -e \"KONG_PG_HOST=kong-database\" \\\n     kong:latest kong migrations bootstrap\n```\n压缩版：`docker run --rm --network=kong-net -e \"KONG_DATABASE=postgres\" -e \"KONG_PG_HOST=kong-database\" kong:latest kong migrations bootstrap`\n\n```\ndocker run -d --name kong \\\n     --network=kong-net \\\n     -e \"KONG_DATABASE=postgres\" \\\n     -e \"KONG_PG_HOST=kong-database\" \\\n     -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n     -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n     -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n     -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n     -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" \\\n     -p 8000:8000 \\\n     -p 8443:8443 \\\n     -p 8001:8001 \\\n     -p 8444:8444 \\\n     kong:latest\n```\n压缩版：`docker run -d --name kong --network=kong-net -e \"KONG_DATABASE=postgres\" -e \"KONG_PG_HOST=kong-database\" -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\"  -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 kong:latest`\n\n`部署成功后，可以访问http://{ip}:8001/检查是否正常运行`\n\n\n# 2.0 安装监控 Konga\n```\ndocker pull pantsel/konga:latest\n```\n\n - 方案1 konga\n```\ndocker run --rm pantsel/konga:latest -c prepare -a postgres -u postgresql://kong:@172.18.0.1:5432/konga\n```\n\n```\ndocker run -p 1337:1337 \\\n        --network kong-net \\\n        --name konga \\\n        -e \"NODE_ENV=production\"  \\\n        -e \"DB_ADAPTER=postgres\" \\\n        -e \"DB_URI=postgresql://kong:@172.18.0.1:5432/konga\" \\\n        pantsel/konga\n```\n压缩版:`docker run -p 1337:1337 --network kong-net --name konga -e \"NODE_ENV=production\"  -e \"DB_ADAPTER=postgres\" -e \"DB_URI=postgresql://kong:@172.18.0.1:5432/konga\" pantsel/konga`\n\n - 方案2 kong-dashboard\n```\ndocker run --rm -p 8080:8080 --network=kong-net pgbi/kong-dashboard  start --kong-url http://kong:8001\n```\n\n\n`http://{konga-ip}:1337/`","slug":"Kong-Konga-Docker容器化安装","published":1,"updated":"2023-02-10T17:34:19.929Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfij700080y15dxf9b0u3","content":"<h1 id=\"1-0-安装kong-postgresDB\"><a href=\"#1-0-安装kong-postgresDB\" class=\"headerlink\" title=\"1.0 安装kong + postgresDB\"></a>1.0 安装kong + postgresDB</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create kong-net</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull postgres:latest</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong-database \\</span><br><span class=\"line\">               --network=kong-net \\</span><br><span class=\"line\">               -p 5432:5432 \\</span><br><span class=\"line\">               -e &quot;POSTGRES_USER=kong&quot; \\</span><br><span class=\"line\">               -e &quot;POSTGRES_DB=kong&quot; \\</span><br><span class=\"line\">               postgres:latest</span><br></pre></td></tr></table></figure>\n\n<p>压缩版：<code>docker run -d --name kong-database --network=kong-net -p 5432:5432 -e &quot;POSTGRES_USER=kong&quot; -e &quot;POSTGRES_DB=kong&quot; postgres:latest</code></p>\n<p><code>docker pull kong:latest</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">     --network=kong-net \\</span><br><span class=\"line\">     -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">     kong:latest kong migrations bootstrap</span><br></pre></td></tr></table></figure>\n<p>压缩版：<code>docker run --rm --network=kong-net -e &quot;KONG_DATABASE=postgres&quot; -e &quot;KONG_PG_HOST=kong-database&quot; kong:latest kong migrations bootstrap</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong \\</span><br><span class=\"line\">     --network=kong-net \\</span><br><span class=\"line\">     -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; \\</span><br><span class=\"line\">     -p 8000:8000 \\</span><br><span class=\"line\">     -p 8443:8443 \\</span><br><span class=\"line\">     -p 8001:8001 \\</span><br><span class=\"line\">     -p 8444:8444 \\</span><br><span class=\"line\">     kong:latest</span><br></pre></td></tr></table></figure>\n<p>压缩版：<code>docker run -d --name kong --network=kong-net -e &quot;KONG_DATABASE=postgres&quot; -e &quot;KONG_PG_HOST=kong-database&quot; -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot;  -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 kong:latest</code></p>\n<p><code>部署成功后，可以访问http://&#123;ip&#125;:8001/检查是否正常运行</code></p>\n<h1 id=\"2-0-安装监控-Konga\"><a href=\"#2-0-安装监控-Konga\" class=\"headerlink\" title=\"2.0 安装监控 Konga\"></a>2.0 安装监控 Konga</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull pantsel/konga:latest</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方案1 konga<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm pantsel/konga:latest -c prepare -a postgres -u postgresql://kong:@172.18.0.1:5432/konga</span><br></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 1337:1337 \\</span><br><span class=\"line\">        --network kong-net \\</span><br><span class=\"line\">        --name konga \\</span><br><span class=\"line\">        -e &quot;NODE_ENV=production&quot;  \\</span><br><span class=\"line\">        -e &quot;DB_ADAPTER=postgres&quot; \\</span><br><span class=\"line\">        -e &quot;DB_URI=postgresql://kong:@172.18.0.1:5432/konga&quot; \\</span><br><span class=\"line\">        pantsel/konga</span><br></pre></td></tr></table></figure>\n<p>压缩版:<code>docker run -p 1337:1337 --network kong-net --name konga -e &quot;NODE_ENV=production&quot;  -e &quot;DB_ADAPTER=postgres&quot; -e &quot;DB_URI=postgresql://kong:@172.18.0.1:5432/konga&quot; pantsel/konga</code></p>\n<ul>\n<li>方案2 kong-dashboard<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm -p 8080:8080 --network=kong-net pgbi/kong-dashboard  start --kong-url http://kong:8001</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><code>http://&#123;konga-ip&#125;:1337/</code></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-0-安装kong-postgresDB\"><a href=\"#1-0-安装kong-postgresDB\" class=\"headerlink\" title=\"1.0 安装kong + postgresDB\"></a>1.0 安装kong + postgresDB</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create kong-net</span><br></pre></td></tr></table></figure>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull postgres:latest</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong-database \\</span><br><span class=\"line\">               --network=kong-net \\</span><br><span class=\"line\">               -p 5432:5432 \\</span><br><span class=\"line\">               -e &quot;POSTGRES_USER=kong&quot; \\</span><br><span class=\"line\">               -e &quot;POSTGRES_DB=kong&quot; \\</span><br><span class=\"line\">               postgres:latest</span><br></pre></td></tr></table></figure>\n\n<p>压缩版：<code>docker run -d --name kong-database --network=kong-net -p 5432:5432 -e &quot;POSTGRES_USER=kong&quot; -e &quot;POSTGRES_DB=kong&quot; postgres:latest</code></p>\n<p><code>docker pull kong:latest</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">     --network=kong-net \\</span><br><span class=\"line\">     -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">     kong:latest kong migrations bootstrap</span><br></pre></td></tr></table></figure>\n<p>压缩版：<code>docker run --rm --network=kong-net -e &quot;KONG_DATABASE=postgres&quot; -e &quot;KONG_PG_HOST=kong-database&quot; kong:latest kong migrations bootstrap</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong \\</span><br><span class=\"line\">     --network=kong-net \\</span><br><span class=\"line\">     -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">     -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; \\</span><br><span class=\"line\">     -p 8000:8000 \\</span><br><span class=\"line\">     -p 8443:8443 \\</span><br><span class=\"line\">     -p 8001:8001 \\</span><br><span class=\"line\">     -p 8444:8444 \\</span><br><span class=\"line\">     kong:latest</span><br></pre></td></tr></table></figure>\n<p>压缩版：<code>docker run -d --name kong --network=kong-net -e &quot;KONG_DATABASE=postgres&quot; -e &quot;KONG_PG_HOST=kong-database&quot; -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot;  -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; -p 8000:8000 -p 8443:8443 -p 8001:8001 -p 8444:8444 kong:latest</code></p>\n<p><code>部署成功后，可以访问http://&#123;ip&#125;:8001/检查是否正常运行</code></p>\n<h1 id=\"2-0-安装监控-Konga\"><a href=\"#2-0-安装监控-Konga\" class=\"headerlink\" title=\"2.0 安装监控 Konga\"></a>2.0 安装监控 Konga</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull pantsel/konga:latest</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方案1 konga<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm pantsel/konga:latest -c prepare -a postgres -u postgresql://kong:@172.18.0.1:5432/konga</span><br></pre></td></tr></table></figure></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 1337:1337 \\</span><br><span class=\"line\">        --network kong-net \\</span><br><span class=\"line\">        --name konga \\</span><br><span class=\"line\">        -e &quot;NODE_ENV=production&quot;  \\</span><br><span class=\"line\">        -e &quot;DB_ADAPTER=postgres&quot; \\</span><br><span class=\"line\">        -e &quot;DB_URI=postgresql://kong:@172.18.0.1:5432/konga&quot; \\</span><br><span class=\"line\">        pantsel/konga</span><br></pre></td></tr></table></figure>\n<p>压缩版:<code>docker run -p 1337:1337 --network kong-net --name konga -e &quot;NODE_ENV=production&quot;  -e &quot;DB_ADAPTER=postgres&quot; -e &quot;DB_URI=postgresql://kong:@172.18.0.1:5432/konga&quot; pantsel/konga</code></p>\n<ul>\n<li>方案2 kong-dashboard<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm -p 8080:8080 --network=kong-net pgbi/kong-dashboard  start --kong-url http://kong:8001</span><br></pre></td></tr></table></figure></li>\n</ul>\n<p><code>http://&#123;konga-ip&#125;:1337/</code></p>"},{"title":"Linux 磁盘挂载 （阿里云数据磁盘）","toc":true,"cover":"/gallery/covers/CP77-COVER.jpg","author":"Zzzang","date":"2023-02-05T17:36:00.000Z","_content":"[参考链接 https://blog.csdn.net/ju_362204801/article/details/122873049](https://blog.csdn.net/ju_362204801/article/details/122873049)\n\n一、查看挂载之前的情况\n<!--more-->\n\n1、检查现在磁盘情况\n使用 `df -h`  命令来查看一下磁盘情况\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60195cfbab673300015e)\n上图就是我没对单独购买的硬盘进行挂载之前用 df -h 查看的情况\n\n可以看到，没挂载之前确实是只显示了一块40G的硬盘，没显示另外一块40G的硬盘\n\n2、查看硬盘个数及分区\n使用 `fdisk -l`  命令来查看一下硬盘个数和分区\n\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60305cfbab6733000160)\n从上图可以看到2块硬盘都在\n\n一块是 /dev/vda 这一块有分区\n\n另外一块是 /dev/vdb 这一块没分区\n\n你买了以后，两块硬盘就都在的，只不过是另外一块，你没设置分区挂载，还不能用\n\n所以，下边我们操作一下分区、挂载\n\n二、进行分区挂载\n1、使用  `fdisk /dev/vdb`    命令进行分区\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60435cfbab6733000161)\n\n2、再次查看磁盘个数及分区 `fdisk -l`\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de604a5cfbab6733000162)\n\n发现 最下面比刚才多了一个分区\n\n3、格式化新分区\n使用命令   `mkfs.ext3 /dev/vdb`  来格式化新分区（使用ext3扩展文件系统）\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60525cfbab6733000163)\n\n4、创建挂载目录\ncd /  进入最外一层根目录，在根目录下 使用 mkdir 命令来创建一个你想要的新目录，我这里新目录取名为extra\n`mkdir extra`\n\n\n5、挂载分区到刚才创建的目录\n使用 `mount /dev/vdb /extra/`  命令进行挂载\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60605cfbab6733000164)\n然后再次 `df -h` 看一下，就可以看到新的硬盘分区已经挂载上去了\n\n`lsblk -f` 命令可以列出文件系统块设备，且能显示设备的 UUID 值。\n```\n[root@iZwz9exnhbzxes54x0ca6lZ ROOT]# lsblk -f\nNAME   FSTYPE LABEL UUID                                 MOUNTPOINT\nvda                                                      \n└─vda1 ext4         aa2763ec-3885-4ef2-ba3c-76bbd5f1cb79 /\nvdb    ext3         fcdefb8d-eb6d-4669-afe9-0e72c145080e /data\n\n```\n\n\n6、设置开机自动挂载\n使用命令 `vim /etc/fstab`\n\n把  /dev/vdb /extra ext3 defaults 0 0\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de606e5cfbab6733000165)\n这个内容写进去，然后保存\n\n 用命令 `reboot` 重启一下服务器就ok了\n \n\n \n 7.取消挂载\n取消目录占用\n```\nfuser -k /file1\nfuser -k /dev/sdb1\n```\n取消挂载点\n```\numount /file1\numount /dev/sdb1\n```","source":"_posts/Linux-磁盘挂载-（阿里云数据磁盘）.md","raw":"title: Linux 磁盘挂载 （阿里云数据磁盘）\ntoc: true\ncover: /gallery/covers/CP77-COVER.jpg\nauthor: Zzzang\ntags:\n  - WebDav\ncategories:\n  - WebDav\ndate: 2023-02-06 01:36:00\n---\n[参考链接 https://blog.csdn.net/ju_362204801/article/details/122873049](https://blog.csdn.net/ju_362204801/article/details/122873049)\n\n一、查看挂载之前的情况\n<!--more-->\n\n1、检查现在磁盘情况\n使用 `df -h`  命令来查看一下磁盘情况\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60195cfbab673300015e)\n上图就是我没对单独购买的硬盘进行挂载之前用 df -h 查看的情况\n\n可以看到，没挂载之前确实是只显示了一块40G的硬盘，没显示另外一块40G的硬盘\n\n2、查看硬盘个数及分区\n使用 `fdisk -l`  命令来查看一下硬盘个数和分区\n\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60305cfbab6733000160)\n从上图可以看到2块硬盘都在\n\n一块是 /dev/vda 这一块有分区\n\n另外一块是 /dev/vdb 这一块没分区\n\n你买了以后，两块硬盘就都在的，只不过是另外一块，你没设置分区挂载，还不能用\n\n所以，下边我们操作一下分区、挂载\n\n二、进行分区挂载\n1、使用  `fdisk /dev/vdb`    命令进行分区\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60435cfbab6733000161)\n\n2、再次查看磁盘个数及分区 `fdisk -l`\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de604a5cfbab6733000162)\n\n发现 最下面比刚才多了一个分区\n\n3、格式化新分区\n使用命令   `mkfs.ext3 /dev/vdb`  来格式化新分区（使用ext3扩展文件系统）\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60525cfbab6733000163)\n\n4、创建挂载目录\ncd /  进入最外一层根目录，在根目录下 使用 mkdir 命令来创建一个你想要的新目录，我这里新目录取名为extra\n`mkdir extra`\n\n\n5、挂载分区到刚才创建的目录\n使用 `mount /dev/vdb /extra/`  命令进行挂载\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de60605cfbab6733000164)\n然后再次 `df -h` 看一下，就可以看到新的硬盘分区已经挂载上去了\n\n`lsblk -f` 命令可以列出文件系统块设备，且能显示设备的 UUID 值。\n```\n[root@iZwz9exnhbzxes54x0ca6lZ ROOT]# lsblk -f\nNAME   FSTYPE LABEL UUID                                 MOUNTPOINT\nvda                                                      \n└─vda1 ext4         aa2763ec-3885-4ef2-ba3c-76bbd5f1cb79 /\nvdb    ext3         fcdefb8d-eb6d-4669-afe9-0e72c145080e /data\n\n```\n\n\n6、设置开机自动挂载\n使用命令 `vim /etc/fstab`\n\n把  /dev/vdb /extra ext3 defaults 0 0\n![title](https://www.zzzang.cn//api/file/getImage?fileId=62de606e5cfbab6733000165)\n这个内容写进去，然后保存\n\n 用命令 `reboot` 重启一下服务器就ok了\n \n\n \n 7.取消挂载\n取消目录占用\n```\nfuser -k /file1\nfuser -k /dev/sdb1\n```\n取消挂载点\n```\numount /file1\numount /dev/sdb1\n```","slug":"Linux-磁盘挂载-（阿里云数据磁盘）","published":1,"updated":"2023-02-10T17:34:03.965Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cle0pfijc00090y15evgs808v","content":"<p><a href=\"https://blog.csdn.net/ju_362204801/article/details/122873049\">参考链接 https://blog.csdn.net/ju_362204801/article/details/122873049</a></p>\n<p>一、查看挂载之前的情况</p>\n<span id=\"more\"></span>\n\n<p>1、检查现在磁盘情况<br>使用 <code>df -h</code>  命令来查看一下磁盘情况<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60195cfbab673300015e\" alt=\"title\"><br>上图就是我没对单独购买的硬盘进行挂载之前用 df -h 查看的情况</p>\n<p>可以看到，没挂载之前确实是只显示了一块40G的硬盘，没显示另外一块40G的硬盘</p>\n<p>2、查看硬盘个数及分区<br>使用 <code>fdisk -l</code>  命令来查看一下硬盘个数和分区</p>\n<p><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60305cfbab6733000160\" alt=\"title\"><br>从上图可以看到2块硬盘都在</p>\n<p>一块是 /dev/vda 这一块有分区</p>\n<p>另外一块是 /dev/vdb 这一块没分区</p>\n<p>你买了以后，两块硬盘就都在的，只不过是另外一块，你没设置分区挂载，还不能用</p>\n<p>所以，下边我们操作一下分区、挂载</p>\n<p>二、进行分区挂载<br>1、使用  <code>fdisk /dev/vdb</code>    命令进行分区<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60435cfbab6733000161\" alt=\"title\"></p>\n<p>2、再次查看磁盘个数及分区 <code>fdisk -l</code><br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de604a5cfbab6733000162\" alt=\"title\"></p>\n<p>发现 最下面比刚才多了一个分区</p>\n<p>3、格式化新分区<br>使用命令   <code>mkfs.ext3 /dev/vdb</code>  来格式化新分区（使用ext3扩展文件系统）<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60525cfbab6733000163\" alt=\"title\"></p>\n<p>4、创建挂载目录<br>cd /  进入最外一层根目录，在根目录下 使用 mkdir 命令来创建一个你想要的新目录，我这里新目录取名为extra<br><code>mkdir extra</code></p>\n<p>5、挂载分区到刚才创建的目录<br>使用 <code>mount /dev/vdb /extra/</code>  命令进行挂载<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60605cfbab6733000164\" alt=\"title\"><br>然后再次 <code>df -h</code> 看一下，就可以看到新的硬盘分区已经挂载上去了</p>\n<p><code>lsblk -f</code> 命令可以列出文件系统块设备，且能显示设备的 UUID 值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwz9exnhbzxes54x0ca6lZ ROOT]# lsblk -f</span><br><span class=\"line\">NAME   FSTYPE LABEL UUID                                 MOUNTPOINT</span><br><span class=\"line\">vda                                                      </span><br><span class=\"line\">└─vda1 ext4         aa2763ec-3885-4ef2-ba3c-76bbd5f1cb79 /</span><br><span class=\"line\">vdb    ext3         fcdefb8d-eb6d-4669-afe9-0e72c145080e /data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>6、设置开机自动挂载<br>使用命令 <code>vim /etc/fstab</code></p>\n<p>把  /dev/vdb /extra ext3 defaults 0 0<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de606e5cfbab6733000165\" alt=\"title\"><br>这个内容写进去，然后保存</p>\n<p> 用命令 <code>reboot</code> 重启一下服务器就ok了</p>\n<p> 7.取消挂载<br>取消目录占用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fuser -k /file1</span><br><span class=\"line\">fuser -k /dev/sdb1</span><br></pre></td></tr></table></figure>\n<p>取消挂载点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">umount /file1</span><br><span class=\"line\">umount /dev/sdb1</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p><a href=\"https://blog.csdn.net/ju_362204801/article/details/122873049\">参考链接 https://blog.csdn.net/ju_362204801/article/details/122873049</a></p>\n<p>一、查看挂载之前的情况</p>","more":"<p>1、检查现在磁盘情况<br>使用 <code>df -h</code>  命令来查看一下磁盘情况<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60195cfbab673300015e\" alt=\"title\"><br>上图就是我没对单独购买的硬盘进行挂载之前用 df -h 查看的情况</p>\n<p>可以看到，没挂载之前确实是只显示了一块40G的硬盘，没显示另外一块40G的硬盘</p>\n<p>2、查看硬盘个数及分区<br>使用 <code>fdisk -l</code>  命令来查看一下硬盘个数和分区</p>\n<p><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60305cfbab6733000160\" alt=\"title\"><br>从上图可以看到2块硬盘都在</p>\n<p>一块是 /dev/vda 这一块有分区</p>\n<p>另外一块是 /dev/vdb 这一块没分区</p>\n<p>你买了以后，两块硬盘就都在的，只不过是另外一块，你没设置分区挂载，还不能用</p>\n<p>所以，下边我们操作一下分区、挂载</p>\n<p>二、进行分区挂载<br>1、使用  <code>fdisk /dev/vdb</code>    命令进行分区<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60435cfbab6733000161\" alt=\"title\"></p>\n<p>2、再次查看磁盘个数及分区 <code>fdisk -l</code><br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de604a5cfbab6733000162\" alt=\"title\"></p>\n<p>发现 最下面比刚才多了一个分区</p>\n<p>3、格式化新分区<br>使用命令   <code>mkfs.ext3 /dev/vdb</code>  来格式化新分区（使用ext3扩展文件系统）<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60525cfbab6733000163\" alt=\"title\"></p>\n<p>4、创建挂载目录<br>cd /  进入最外一层根目录，在根目录下 使用 mkdir 命令来创建一个你想要的新目录，我这里新目录取名为extra<br><code>mkdir extra</code></p>\n<p>5、挂载分区到刚才创建的目录<br>使用 <code>mount /dev/vdb /extra/</code>  命令进行挂载<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de60605cfbab6733000164\" alt=\"title\"><br>然后再次 <code>df -h</code> 看一下，就可以看到新的硬盘分区已经挂载上去了</p>\n<p><code>lsblk -f</code> 命令可以列出文件系统块设备，且能显示设备的 UUID 值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@iZwz9exnhbzxes54x0ca6lZ ROOT]# lsblk -f</span><br><span class=\"line\">NAME   FSTYPE LABEL UUID                                 MOUNTPOINT</span><br><span class=\"line\">vda                                                      </span><br><span class=\"line\">└─vda1 ext4         aa2763ec-3885-4ef2-ba3c-76bbd5f1cb79 /</span><br><span class=\"line\">vdb    ext3         fcdefb8d-eb6d-4669-afe9-0e72c145080e /data</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>6、设置开机自动挂载<br>使用命令 <code>vim /etc/fstab</code></p>\n<p>把  /dev/vdb /extra ext3 defaults 0 0<br><img src=\"https://www.zzzang.cn//api/file/getImage?fileId=62de606e5cfbab6733000165\" alt=\"title\"><br>这个内容写进去，然后保存</p>\n<p> 用命令 <code>reboot</code> 重启一下服务器就ok了</p>\n<p> 7.取消挂载<br>取消目录占用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fuser -k /file1</span><br><span class=\"line\">fuser -k /dev/sdb1</span><br></pre></td></tr></table></figure>\n<p>取消挂载点</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">umount /file1</span><br><span class=\"line\">umount /dev/sdb1</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cle0pfiio00040y154yv74eg6","category_id":"cle0pfiiy00060y15fn0y4u6s","_id":"cle0pfijm000d0y15428m2w1m"},{"post_id":"cle0pfiis00050y15cb5x089e","category_id":"cle0pfijg000a0y15da52an0o","_id":"cle0pfijy000h0y158hx84cwz"},{"post_id":"cle0pfij700080y15dxf9b0u3","category_id":"cle0pfijn000e0y159mws8ama","_id":"cle0pfik5000l0y15e2q0fi2r"},{"post_id":"cle0pfijc00090y15evgs808v","category_id":"cle0pfijz000i0y154m1791eq","_id":"cle0pfik7000n0y156jm67rip"}],"PostTag":[{"post_id":"cle0pfiio00040y154yv74eg6","tag_id":"cle0pfij400070y150on4b4xf","_id":"cle0pfijl000c0y15ecuw6ycb"},{"post_id":"cle0pfiis00050y15cb5x089e","tag_id":"cle0pfiji000b0y1533ik6a5j","_id":"cle0pfijr000g0y154yw7a3gq"},{"post_id":"cle0pfij700080y15dxf9b0u3","tag_id":"cle0pfijp000f0y15cz3068kx","_id":"cle0pfik3000k0y15harphk73"},{"post_id":"cle0pfijc00090y15evgs808v","tag_id":"cle0pfik1000j0y15eg6heh88","_id":"cle0pfik6000m0y15d09meb5r"}],"Tag":[{"name":"https proxy","_id":"cle0pfij400070y150on4b4xf"},{"name":"Kubernetes","_id":"cle0pfiji000b0y1533ik6a5j"},{"name":"Docker","_id":"cle0pfijp000f0y15cz3068kx"},{"name":"WebDav","_id":"cle0pfik1000j0y15eg6heh88"}]}}